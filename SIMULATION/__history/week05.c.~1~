#include <xc.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
// CONFIG1
#pragma config FOSC = HS        // Oscillator Selection bits (HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config MCLRE = OFF      // RE3/MCLR pin function select bit (RE3/MCLR pin function is digital input, MCLR internally tied to VDD)
#pragma config CP = ON        // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = ON       // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = ON       // Brown Out Reset Selection bits (BOR enabled)
#pragma config IESO = ON        // Internal External Switchover bit (Internal/External Switchover mode is enabled)
#pragma config FCMEN = ON       // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is enabled)
#pragma config LVP = ON         // Low Voltage Programming Enable bit (RB3/PGM pin has PGM function, low voltage programming enabled)

// CONFIG2
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF        // Flash Program Memory Self Write Enable bits (Write protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#define _XTAL_FREQ 1000000L
#define SH  RC0
#define DS  RC1
#define ST  RC2
#define SHrow RC3
#define DSrow RC4

/* Hang va cot cua LED matrix*/
unsigned char row[] = {1, 2, 4, 8, 16, 32, 64};
//int column[] = {128, 64, 32, 16, 8, 4, 2, 1};

/*bieu dien các ki tu chu va so o dang HEX*/
/*unsigned char characterHEX[][8] = {
{0x18,0x3C,0x66,0x66,0x7E,0x66,0x66,0x66},//A
{0x78,0x64,0x68,0x78,0x64,0x66,0x66,0x7C},//B
{0x3C,0x62,0x60,0x60,0x60,0x62,0x62,0x3C},//C
{0x78,0x64,0x66,0x66,0x66,0x66,0x64,0x78},//D
{0x7E,0x60,0x60,0x7C,0x60,0x60,0x60,0x7E},//E
{0x7E,0x60,0x60,0x7C,0x60,0x60,0x60,0x60},//F
{0x3C,0x62,0x60,0x60,0x66,0x62,0x62,0x3C},//G
{0x66,0x66,0x66,0x7E,0x66,0x66,0x66,0x66},//H
{0x7E,0x18,0x18,0x18,0x18,0x18,0x18,0x7E},//I
{0x7E,0x18,0x18,0x18,0x18,0x18,0x1A,0x0C},//J
{0x62,0x64,0x68,0x70,0x70,0x68,0x64,0x62},//K
{0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x7E},//L
{0xC3,0xE7,0xDB,0xDB,0xC3,0xC3,0xC3,0xC3},//M
{0x62,0x62,0x52,0x52,0x4A,0x4A,0x46,0x46},//N
{0x3C,0x66,0x66,0x66,0x66,0x66,0x66,0x3C},//O
{0x7C,0x62,0x62,0x7C,0x60,0x60,0x60,0x60},//P
{0x38,0x64,0x64,0x64,0x64,0x6C,0x64,0x3A},//Q
{0x7C,0x62,0x62,0x7C,0x70,0x68,0x64,0x62},//R
{0x1C,0x22,0x30,0x18,0x0C,0x46,0x46,0x3C},//S
{0x7E,0x18,0x18,0x18,0x18,0x18,0x18,0x18},//T
{0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x3C},//U
{0x66,0x66,0x66,0x66,0x66,0x66,0x3C,0x18},//V
{0x81,0x81,0x81,0x81,0x81,0x99,0x99,0x66},//W
{0x42,0x42,0x24,0x18,0x18,0x24,0x42,0x42},//X
{0xC3,0x66,0x3C,0x18,0x18,0x18,0x18,0x18},//Y
{0x7E,0x02,0x04,0x08,0x10,0x20,0x40,0x7E},//Z
{0x3C,0x66,0x66,0x6E,0x76,0x66,0x66,0x3C},//0
{0x18,0x38,0x58,0x18,0x18,0x18,0x18,0x7E},//1
{0x3C,0x66,0x66,0x0C,0x18,0x30,0x7E,0x7E},//2
{0x7E,0x0C,0x18,0x3C,0x06,0x06,0x46,0x3C},//3
{0x0C,0x18,0x30,0x6C,0x6C,0x7E,0x0C,0x0C},//4
{0x7E,0x60,0x60,0x7C,0x06,0x06,0x46,0x3C},//5
{0x04,0x08,0x10,0x38,0x6C,0x66,0x66,0x3C},//6
{0x7E,0x46,0x0C,0x18,0x18,0x18,0x18,0x18},//7
{0x3C,0x66,0x66,0x3C,0x66,0x66,0x66,0x3C},//8
{0x3C,0x66,0x66,0x36,0x1C,0x08,0x10,0x20},//9
//{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},// khoang trong
//{0x00,0x66,0xFF,0xFF,0x7E,0x3C,0x18,0x00}// hinh trai tim, ki hieu la '&'
}; */


unsigned char characterHEX[][5]= {///////ASCII  cho LED ma tran 5x7
	  /*0x00, 0x00, 0x00, 0x00, 0x00  ,// 32
	  0x00, 0x00, 0x7d, 0x00, 0x00  ,// 33
	  0x00, 0x70, 0x00, 0x70, 0x00  ,// 34
	  0x14, 0x7f, 0x14, 0x7f, 0x14  ,// 35
	  0x12, 0x2a, 0x7f, 0x2a, 0x24  ,// 36
	  0x62, 0x64, 0x08, 0x13, 0x23  ,// 37
	  0x36, 0x49, 0x55, 0x22, 0x05  ,// 38
	  0x00, 0x50, 0x60, 0x00, 0x00  ,// 39
	  0x00, 0x1c, 0x22, 0x41, 0x00  ,// 40
	  0x00, 0x41, 0x22, 0x1c, 0x00  ,// 41
	  0x14, 0x08, 0x3e, 0x08, 0x14  ,// 42
	  0x08, 0x08, 0x3e, 0x08, 0x08  ,// 43
	  0x00, 0x05, 0x06, 0x00, 0x00  ,// 44
	  0x08, 0x08, 0x08, 0x08, 0x08  ,// 45
	  0x00, 0x03, 0x03, 0x00, 0x00  ,// 46
	  0x02, 0x04, 0x08, 0x10, 0x20*/  // 47
	  {0x3e, 0x45, 0x49, 0x51, 0x3e}  ,// 48: '0'
	  {0x00, 0x21, 0x7f, 0x01, 0x00}  ,// 49: '1'
	  {0x21, 0x43, 0x45, 0x49, 0x31}  ,// 50: '2'
	  {0x42, 0x41, 0x51, 0x69, 0x46}  ,// 51: '3'
	  {0x0c, 0x14, 0x24, 0x7f, 0x04}  ,// 52
	  {0x72, 0x51, 0x51, 0x51, 0x4e}  ,// 53
	  {0x1e, 0x29, 0x49, 0x49, 0x06}  ,// 54
	  {0x40, 0x47, 0x48, 0x50, 0x60}  ,// 55
	  {0x36, 0x49, 0x49, 0x49, 0x36}  ,// 56
	  {0x30, 0x49, 0x49, 0x4a, 0x3c}  ,// 57
	  /*0x00, 0x36, 0x36, 0x00, 0x00  ,// 58
	  0x00, 0x35, 0x36, 0x00, 0x00  ,// 59
	  0x08, 0x14, 0x22, 0x41, 0x00  ,// 60
	  0x14, 0x14, 0x14, 0x14, 0x14  ,// 61
	  0x41, 0x22, 0x14, 0x08, 0x00  ,// 62
	  0x20, 0x40, 0x45, 0x48, 0x30  ,// 63
	  0x26, 0x49, 0x4f, 0x41, 0x3e  ,// 64*/
	  /*{0x3f, 0x44, 0x44, 0x44, 0x3f}  ,// 65  'A'
	  {0x7f, 0x49, 0x49, 0x49, 0x36}  ,// 66
	  {0x3e, 0x41, 0x41, 0x41, 0x22}  ,// 67
	  {0x7f, 0x41, 0x41, 0x41, 0x3e}  ,// 68
	  {0x7f, 0x49, 0x49, 0x49, 0x41}  ,// 69
	  {0x7f, 0x48, 0x48, 0x48, 0x40}  ,// 70
	  {0x3e, 0x41, 0x49, 0x49, 0x2f}  ,// 71
	  {0x7f, 0x08, 0x08, 0x08, 0x7f}  ,// 72
	  {0x00, 0x41, 0x7f, 0x41, 0x00}  ,// 73
	  {0x02, 0x01, 0x41, 0x7e, 0x40}  ,// 74
	  {0x7f, 0x08, 0x14, 0x22, 0x41}  ,// 75
	  {0x7f, 0x01, 0x01, 0x01, 0x01}  ,// 76
	  {0x7f, 0x40, 0x20, 0x40, 0x7f}  ,// 77
	  {0x7f, 0x10, 0x08, 0x04, 0x7f}  ,// 78
	  {0x3e, 0x41, 0x41, 0x41, 0x3e}  ,// 79
	  {0x7f, 0x48, 0x48, 0x48, 0x30}  ,// 80
	  {0x3e, 0x41, 0x45, 0x42, 0x3d}  ,// 81
	  {0x7f, 0x48, 0x4c, 0x4a, 0x31}  ,// 82
	  {0x31, 0x49, 0x49, 0x49, 0x46}  ,// 83
	  {0x40, 0x40, 0x7f, 0x40, 0x40}  ,// 84
	  {0x7e, 0x01, 0x01, 0x01, 0x7e}  ,// 85
	  {0x7c, 0x02, 0x01, 0x02, 0x7c}  ,// 86
	  {0x7e, 0x01, 0x0e, 0x01, 0x7e}  ,// 87
	  {0x63, 0x14, 0x08, 0x14, 0x63}  ,// 88
	  {0x70, 0x08, 0x07, 0x08, 0x70}  ,// 89
	  {0x43, 0x45, 0x49, 0x51, 0x61}   // 90
	  /*0x00, 0x7f, 0x41, 0x41, 0x00  ,// 91
	  0x54, 0x34, 0x1f, 0x34, 0x54  ,// 92
	  0x00, 0x41, 0x41, 0x7f, 0x00  ,// 93
	  0x10, 0x20, 0x40, 0x20, 0x10  ,// 94
	  0x01, 0x01, 0x01, 0x01, 0x01  ,// 95
	  0x00, 0x40, 0x20, 0x10, 0x00  ,// 96
	  0x02, 0x15, 0x15, 0x15, 0x0f  ,// 97  'a'
	  0x7f, 0x09, 0x11, 0x11, 0x0e  ,// 98
	  0x0e, 0x11, 0x11, 0x11, 0x02  ,// 99
	  0x0e, 0x11, 0x11, 0x09, 0x7f  ,// 100
	  0x0e, 0x15, 0x15, 0x15, 0x0c  ,// 101
	  0x08, 0x3f, 0x48, 0x40, 0x20  ,// 102
	  0x30, 0x49, 0x49, 0x49, 0x7e  ,// 103
	  0x7f, 0x08, 0x10, 0x10, 0x0f  ,// 104
	  0x00, 0x11, 0x5f, 0x01, 0x00  ,// 105
	  0x02, 0x01, 0x21, 0x7e, 0x00  ,// 106
	  0x7f, 0x04, 0x0a, 0x11, 0x00  ,// 107
	  0x00, 0x41, 0x7f, 0x01, 0x00  ,// 108
	  0x1f, 0x10, 0x0c, 0x10, 0x0f  ,// 109
	  0x1f, 0x08, 0x10, 0x10, 0x0f  ,// 110
	  0x0e, 0x11, 0x11, 0x11, 0x0e  ,// 111
	  0x1f, 0x14, 0x14, 0x14, 0x08  ,// 112
	  0x08, 0x14, 0x14, 0x0c, 0x1f  ,// 113
	  0x1f, 0x08, 0x10, 0x10, 0x08  ,// 114
	  0x09, 0x15, 0x15, 0x15, 0x12  ,// 115
	  0x20, 0x7e, 0x21, 0x01, 0x02  ,// 116
	  0x1e, 0x01, 0x01, 0x02, 0x1f  ,// 117
	  0x1c, 0x02, 0x01, 0x02, 0x1c  ,// 118
	  0x1e, 0x01, 0x06, 0x01, 0x1e  ,// 119
	  0x11, 0x0a, 0x04, 0x0a, 0x11  ,// 120
	  0x18, 0x05, 0x05, 0x05, 0x1e  ,// 121
	  0x11, 0x13, 0x15, 0x19, 0x11  ,// 122
	  0x00, 0x08, 0x36, 0x41, 0x00  ,// 123
	  0x00, 0x00, 0x7f, 0x00, 0x00  ,// 124
	  0x00, 0x41, 0x36, 0x08, 0x00  ,// 125
	  0x08, 0x08, 0x2a, 0x1c, 0x08  ,// 126
	  0x08, 0x1c, 0x2a, 0x08, 0x08  ,// 127*/
};

/* ki tu dai dien de bieu dien chu va so tren led ma tran */
unsigned char character[] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};//,' ','&'};

//unsigned int Timer0   = 65535 - 1*(1000000/(4*128));
void interrupt ISR(void);// Khai bao ham ngat ngoai
void __delay_timer0(void);// khai bao ham ngat timer0
void dislayLedMatrix(unsigned char, unsigned char); //Ham hien thi ki tu len LED ma tran
//void interrupt ADC(void);

int adc_lm35; //bien nhiet do
unsigned char char_tens, char_ones;
unsigned int count= 0;

/*main*/
void main(void)
{  
      ANSEL=1; ANSELH=0;          // chan RA0 la chan Anolog
      TRISBbits.TRISB0 = 1;   // Chan RB0 la ngo vao
      TRISD=0; PORTD=0;    // xuat Led o PortD, ban dau cac Led tat
      TRISC=0; PORTC=0;
     //RCONbits.IPEN    =   0;// Su dung 1 muc ngat
      INTCONbits.GIE   =   1;// Bat ngat toan cuc
      INTCONbits.PEIE  =   1;// Tat ngat ngoai vi
      INTCONbits.INTE = 1   ;// cho phep ngat ngoai
      OPTION_REGbits.INTEDG = 0;// chon suon xuong de ngat
   
   
     //cau hinh Timer0
      TMR0 = 56;
      OPTION_REGbits.PSA = 0;//chon timer0
      OPTION_REGbits.PS2 = 0;
      OPTION_REGbits.PS1 = 1; 
      OPTION_REGbits.PS0 = 0;//bo chia tan 8
      OPTION_REGbits.T0CS = 0;//su dung dao dong noi

     //cau hinh ADC
      ADCON0bits.CHS0=CHS1=CHS2=CHS3=0; // chon kenh AN0 lam bo chuyen doi
      ADCON0bits.ADON=1;//cho phep ADC hoat dong
      ADCON0bits.ADCS1=0; ADCS0=0;//chan xung clock cho ADC bang Fosc/2
      ADCON1bits.ADFM=1;// ket qua 10bit luu o ben phai 2 thanh ghi ADRESH:ADRESL
      ADCON1bits.VCFG0=VCFG1=0; //dien ap tham chieu la Vdd-Vss
      PIR1bits.ADIF=0;// clear co ngat
      ADCON0bits.GO_nDONE=1;//khoi dong ADC 

      
      while (1)
      {   
	    if (ADCON0bits.GO_nDONE==0)    
	       {
	       adc_lm35=ADRESH*256+ADRESL ;//lay ket qua tu thanh ghi
               adc_lm35 =  (int)(adc_lm35/2.046);// adc_lm35=(int)(adc_lm35*5000.0f/1023)/10); //chuyen doi sang do C
	       //Temp= adc_lm35;
	       //ones=Temp%10;
	       //tens=Temp/10;
	       char_ones= adc_lm35%10 + 48;//Ma ASCII cua chu so hang don vi cua nhiet do
	       char_tens= adc_lm35/10 + 48;//Ma ASCII cua chu so hang chuc cua nhiet do
	       //ADIF=0; 
	       GO_nDONE=1;//GO=1;
	       }
	       
	    dislayLedMatrix(char_tens,char_ones); //hien thi nhiet do bang Led ma tran
	              
	/*       
            PORTD = 0x01;
          __delay_timer0();
       
            PORTD <<= 1;
          __delay_timer0();
          
            PORTD <<=1;
          __delay_timer0();
            
            PORTD <<= 1;
          __delay_timer0();
            
            PORTD >>= 1;
          __delay_timer0();
            
            PORTD >>=1 ;
          __delay_timer0();*/
         
      }
      return;
}
void interrupt ISR(void)// Dinh nghia ngat ngoai RB0
{
     while(RB0==0);//
     while(RB0==1);//Nha tay khoi nut bam mach van dung
     INTCONbits.INTF=0; // xoa co ngat de mach tiep tuc chay
}

  void __delay_timer0(void)
{
      count = 0;
      while(count <= 156)//cho tran timer0 156 lan
      { 
	 if(INTCONbits.TMR0IF == 1)//kiem tra co tran
	   {
	       INTCONbits.TMR0IF = 0;//xoa co tran de tiep tuc lan tran tiep theo
	       TMR0 = 56;
	       count++;
	   }
      }
      return;
} 

/*void interrupt ADC(void)
{    
	   adc_lm35=ADRESH*256+ADRESL ;//lay ket qua tu thanh ghi
	   adc_lm35=(int)(adc_lm35*5000.0f/1023)/ 10;//chuyen doi sang do C	       
	   ADIF=0; 
	   GO_nDONE=1;//GO=1;   
}*/

void dislayLedMatrix(unsigned char char_tens, unsigned char char_ones)
      {
	 unsigned char i,j,r,a,b;
	 for (i=0; i<sizeof(character); i++)
	  {
	     if( char_tens == character[i])//tim so thu tu cua ki tu trong mang character
             break;
	  }
	 
	 for (j=0; j<sizeof(character); j++)
	  {
	     if( char_ones == character[j])
             break;
	  }
	 /*quet LED ma tran theo hang dung IC dich*/
	 for(r=0; r<5; r++)//quet cot
	     {
		
		/*Cho tung bit chon hang vao IC dich hang*/
		for(a=0; a<8; a++)
		{
		  SHrow = 0;
		  DSrow = !((row[r] & (0x80>>a)) == 0); //Dua lan luot tu bit 7 den bit 0 vao IC, hang la Katot
		  SHrow = 1;//thuc hien dua vao
		}
		
		/*Cho tung bit cot cua LED ma tran hien thi don vi vao IC dich cot hang don vi*/
		for(b=0; b<8; b++)
		{
		   SH = 0;
		   DS = ((characterHEX[j][r] & (0x80>>b)) == 0);//Cot cua LED ma tran la Anot: bit 0 thi den sang, bit 1 den tat
		   SH = 1;
		}  
		
		/*Cho tung bit cot cua LED ma tran hien thi hang chuc vao IC dich cot hang chuc*/
		for(b=0; b<8; b++)
		{
		   SH = 0;
		   DS = ((characterHEX[i][r] & (0x80>>b)) == 0);
		   SH = 1 ;
		}
		
		/*Chuyen tin  hieu tu IC sang LED ma tran*/
		ST = 0;
	     // __delay_us(5);
		ST = 1;// IC dich truyen song song tin hieu cho led ma tran
	     }   
      } 
