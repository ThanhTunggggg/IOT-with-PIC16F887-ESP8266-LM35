

Microchip Technology PIC PRO Macro Assembler V1.41 build -162212810 
                                                                                               Wed Sep 27 11:38:01 2017

Microchip Technology Omniscient Code Generator v1.41 (PRO mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	pa_nodes0,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.41
    25                           ; Generated 25/01/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370                           
   371                           	psect	idataBANK0
   372  0000                     __pidataBANK0:	
   373                           
   374                           	psect	stringtext
   375  0400                     __pstringtext:	
   376  0400                     stringtab:	
   377  0400                     __stringtab:	
   378                           
   379                           ;	String table - string pointers are 2 bytes each
   380  0400  1BFF               	btfsc	btemp+1,7
   381  0401  2C0A               	ljmp	stringcode
   382  0402  1383               	bcf	3,7
   383  0403  187F               	btfsc	btemp+1,0
   384  0404  1783               	bsf	3,7
   385  0405  0800               	movf	0,w
   386  0406  0A84               	incf	4,f
   387  0407  1903               	skipnz
   388  0408  0AFF               	incf	btemp+1,f
   389  0409  0008               	return
   390  040A                     stringcode:	
   391  040A  087F               	movf	btemp+1,w
   392  040B  397F               	andlw	127
   393  040C  008A               	movwf	10
   394  040D  0804               	movf	4,w
   395  040E  0A84               	incf	4,f
   396  040F  1903               	skipnz
   397  0410  0AFF               	incf	btemp+1,f
   398  0411  0082               	movwf	2
   399  0412                     __stringbase:	
   400  0412                     __end_of__stringtab:	
   401  0412                     _font:	
   402  0412  34FF               	retlw	255
   403  0413  34FF               	retlw	255
   404  0414  34FF               	retlw	255
   405  0415  34FF               	retlw	255
   406  0416  34FF               	retlw	255
   407  0417  34FF               	retlw	255
   408  0418  34FF               	retlw	255
   409  0419  34FF               	retlw	255
   410  041A  34A0               	retlw	160
   411  041B  34FF               	retlw	255
   412  041C  34FF               	retlw	255
   413  041D  34FF               	retlw	255
   414  041E  34FF               	retlw	255
   415  041F  34FF               	retlw	255
   416  0420  34F8               	retlw	248
   417  0421  34F4               	retlw	244
   418  0422  34FF               	retlw	255
   419  0423  34FF               	retlw	255
   420  0424  34EB               	retlw	235
   421  0425  3480               	retlw	128
   422  0426  34EB               	retlw	235
   423  0427  3480               	retlw	128
   424  0428  34EB               	retlw	235
   425  0429  34FF               	retlw	255
   426  042A  34DB               	retlw	219
   427  042B  34D5               	retlw	213
   428  042C  3480               	retlw	128
   429  042D  34D5               	retlw	213
   430  042E  34ED               	retlw	237
   431  042F  34FF               	retlw	255
   432  0430  34D8               	retlw	216
   433  0431  34EA               	retlw	234
   434  0432  3494               	retlw	148
   435  0433  34AB               	retlw	171
   436  0434  348D               	retlw	141
   437  0435  34FF               	retlw	255
   438  0436  34C9               	retlw	201
   439  0437  34B6               	retlw	182
   440  0438  34A9               	retlw	169
   441  0439  34DF               	retlw	223
   442  043A  34AF               	retlw	175
   443  043B  34FF               	retlw	255
   444  043C  34FF               	retlw	255
   445  043D  34FF               	retlw	255
   446  043E  34F8               	retlw	248
   447  043F  34F4               	retlw	244
   448  0440  34FF               	retlw	255
   449  0441  34FF               	retlw	255
   450  0442  34FF               	retlw	255
   451  0443  34E3               	retlw	227
   452  0444  34DD               	retlw	221
   453  0445  34BE               	retlw	190
   454  0446  34FF               	retlw	255
   455  0447  34FF               	retlw	255
   456  0448  34FF               	retlw	255
   457  0449  34BE               	retlw	190
   458  044A  34DD               	retlw	221
   459  044B  34E3               	retlw	227
   460  044C  34FF               	retlw	255
   461  044D  34FF               	retlw	255
   462  044E  34D5               	retlw	213
   463  044F  34E3               	retlw	227
   464  0450  3480               	retlw	128
   465  0451  34E3               	retlw	227
   466  0452  34D5               	retlw	213
   467  0453  34FF               	retlw	255
   468  0454  34F7               	retlw	247
   469  0455  34F7               	retlw	247
   470  0456  34C1               	retlw	193
   471  0457  34F7               	retlw	247
   472  0458  34F7               	retlw	247
   473  0459  34FF               	retlw	255
   474  045A  34FF               	retlw	255
   475  045B  34A7               	retlw	167
   476  045C  34C7               	retlw	199
   477  045D  34FF               	retlw	255
   478  045E  34FF               	retlw	255
   479  045F  34FF               	retlw	255
   480  0460  34F7               	retlw	247
   481  0461  34F7               	retlw	247
   482  0462  34F7               	retlw	247
   483  0463  34F7               	retlw	247
   484  0464  34F7               	retlw	247
   485  0465  34FF               	retlw	255
   486  0466  34FF               	retlw	255
   487  0467  349F               	retlw	159
   488  0468  349F               	retlw	159
   489  0469  34FF               	retlw	255
   490  046A  34FF               	retlw	255
   491  046B  34FF               	retlw	255
   492  046C  34FF               	retlw	255
   493  046D  34C9               	retlw	201
   494  046E  34C9               	retlw	201
   495  046F  34FF               	retlw	255
   496  0470  34FF               	retlw	255
   497  0471  34FF               	retlw	255
   498  0472  34C1               	retlw	193
   499  0473  34AE               	retlw	174
   500  0474  34B6               	retlw	182
   501  0475  34BA               	retlw	186
   502  0476  34C1               	retlw	193
   503  0477  34FF               	retlw	255
   504  0478  34FF               	retlw	255
   505  0479  34BD               	retlw	189
   506  047A  3480               	retlw	128
   507  047B  34BF               	retlw	191
   508  047C  34FF               	retlw	255
   509  047D  34FF               	retlw	255
   510  047E  348D               	retlw	141
   511  047F  34B6               	retlw	182
   512  0480  34B6               	retlw	182
   513  0481  34B6               	retlw	182
   514  0482  34B9               	retlw	185
   515  0483  34FF               	retlw	255
   516  0484  34DD               	retlw	221
   517  0485  34BE               	retlw	190
   518  0486  34B6               	retlw	182
   519  0487  34B6               	retlw	182
   520  0488  34C9               	retlw	201
   521  0489  34FF               	retlw	255
   522  048A  34E7               	retlw	231
   523  048B  34EB               	retlw	235
   524  048C  34ED               	retlw	237
   525  048D  3480               	retlw	128
   526  048E  34EF               	retlw	239
   527  048F  34FF               	retlw	255
   528  0490  34D8               	retlw	216
   529  0491  34BA               	retlw	186
   530  0492  34BA               	retlw	186
   531  0493  34BA               	retlw	186
   532  0494  34C6               	retlw	198
   533  0495  34FF               	retlw	255
   534  0496  34C3               	retlw	195
   535  0497  34B5               	retlw	181
   536  0498  34B6               	retlw	182
   537  0499  34B6               	retlw	182
   538  049A  34CF               	retlw	207
   539  049B  34FF               	retlw	255
   540  049C  34FE               	retlw	254
   541  049D  348E               	retlw	142
   542  049E  34F6               	retlw	246
   543  049F  34FA               	retlw	250
   544  04A0  34FC               	retlw	252
   545  04A1  34FF               	retlw	255
   546  04A2  34C9               	retlw	201
   547  04A3  34B6               	retlw	182
   548  04A4  34B6               	retlw	182
   549  04A5  34B6               	retlw	182
   550  04A6  34C9               	retlw	201
   551  04A7  34FF               	retlw	255
   552  04A8  34F9               	retlw	249
   553  04A9  34B6               	retlw	182
   554  04AA  34B6               	retlw	182
   555  04AB  34D6               	retlw	214
   556  04AC  34E1               	retlw	225
   557  04AD  34FF               	retlw	255
   558  04AE  34FF               	retlw	255
   559  04AF  34C9               	retlw	201
   560  04B0  34C9               	retlw	201
   561  04B1  34FF               	retlw	255
   562  04B2  34FF               	retlw	255
   563  04B3  34FF               	retlw	255
   564  04B4  34FF               	retlw	255
   565  04B5  34A4               	retlw	164
   566  04B6  34C4               	retlw	196
   567  04B7  34FF               	retlw	255
   568  04B8  34FF               	retlw	255
   569  04B9  34FF               	retlw	255
   570  04BA  34F7               	retlw	247
   571  04BB  34EB               	retlw	235
   572  04BC  34DD               	retlw	221
   573  04BD  34BE               	retlw	190
   574  04BE  34FF               	retlw	255
   575  04BF  34FF               	retlw	255
   576  04C0  34EB               	retlw	235
   577  04C1  34EB               	retlw	235
   578  04C2  34EB               	retlw	235
   579  04C3  34EB               	retlw	235
   580  04C4  34EB               	retlw	235
   581  04C5  34FF               	retlw	255
   582  04C6  34FF               	retlw	255
   583  04C7  34BE               	retlw	190
   584  04C8  34DD               	retlw	221
   585  04C9  34EB               	retlw	235
   586  04CA  34F7               	retlw	247
   587  04CB  34FF               	retlw	255
   588  04CC  34FD               	retlw	253
   589  04CD  34FE               	retlw	254
   590  04CE  34AE               	retlw	174
   591  04CF  34F6               	retlw	246
   592  04D0  34F9               	retlw	249
   593  04D1  34FF               	retlw	255
   594  04D2  34CD               	retlw	205
   595  04D3  34B6               	retlw	182
   596  04D4  348E               	retlw	142
   597  04D5  34BE               	retlw	190
   598  04D6  34C1               	retlw	193
   599  04D7  34FF               	retlw	255
   600  04D8  3483               	retlw	131
   601  04D9  34F5               	retlw	245
   602  04DA  34F6               	retlw	246
   603  04DB  34F5               	retlw	245
   604  04DC  3483               	retlw	131
   605  04DD  34FF               	retlw	255
   606  04DE  34BE               	retlw	190
   607  04DF  3480               	retlw	128
   608  04E0  34B6               	retlw	182
   609  04E1  34B6               	retlw	182
   610  04E2  34C9               	retlw	201
   611  04E3  34FF               	retlw	255
   612  04E4  34C1               	retlw	193
   613  04E5  34BE               	retlw	190
   614  04E6  34BE               	retlw	190
   615  04E7  34BE               	retlw	190
   616  04E8  34DD               	retlw	221
   617  04E9  34FF               	retlw	255
   618  04EA  34BE               	retlw	190
   619  04EB  3480               	retlw	128
   620  04EC  34BE               	retlw	190
   621  04ED  34BE               	retlw	190
   622  04EE  34C1               	retlw	193
   623  04EF  34FF               	retlw	255
   624  04F0  3480               	retlw	128
   625  04F1  34B6               	retlw	182
   626  04F2  34B6               	retlw	182
   627  04F3  34B6               	retlw	182
   628  04F4  34BE               	retlw	190
   629  04F5  34FF               	retlw	255
   630  04F6  3480               	retlw	128
   631  04F7  34F6               	retlw	246
   632  04F8  34F6               	retlw	246
   633  04F9  34FE               	retlw	254
   634  04FA  34FE               	retlw	254
   635  04FB  34FF               	retlw	255
   636  04FC  34C1               	retlw	193
   637  04FD  34BE               	retlw	190
   638  04FE  34B6               	retlw	182
   639  04FF  34B6               	retlw	182
   640  0500  34C5               	retlw	197
   641  0501  34FF               	retlw	255
   642  0502  3480               	retlw	128
   643  0503  34F7               	retlw	247
   644  0504  34F7               	retlw	247
   645  0505  34F7               	retlw	247
   646  0506  3480               	retlw	128
   647  0507  34FF               	retlw	255
   648  0508  34FF               	retlw	255
   649  0509  34BE               	retlw	190
   650  050A  3480               	retlw	128
   651  050B  34BE               	retlw	190
   652  050C  34FF               	retlw	255
   653  050D  34FF               	retlw	255
   654  050E  34DF               	retlw	223
   655  050F  34BF               	retlw	191
   656  0510  34BE               	retlw	190
   657  0511  34C0               	retlw	192
   658  0512  34FE               	retlw	254
   659  0513  34FF               	retlw	255
   660  0514  3480               	retlw	128
   661  0515  34F7               	retlw	247
   662  0516  34EB               	retlw	235
   663  0517  34DD               	retlw	221
   664  0518  34BE               	retlw	190
   665  0519  34FF               	retlw	255
   666  051A  3480               	retlw	128
   667  051B  34BF               	retlw	191
   668  051C  34BF               	retlw	191
   669  051D  34BF               	retlw	191
   670  051E  34FF               	retlw	255
   671  051F  34FF               	retlw	255
   672  0520  3480               	retlw	128
   673  0521  34FD               	retlw	253
   674  0522  34F3               	retlw	243
   675  0523  34FD               	retlw	253
   676  0524  3480               	retlw	128
   677  0525  34FF               	retlw	255
   678  0526  3480               	retlw	128
   679  0527  34FD               	retlw	253
   680  0528  34FB               	retlw	251
   681  0529  34F7               	retlw	247
   682  052A  3480               	retlw	128
   683  052B  34FF               	retlw	255
   684  052C  34C1               	retlw	193
   685  052D  34BE               	retlw	190
   686  052E  34BE               	retlw	190
   687  052F  34BE               	retlw	190
   688  0530  34C1               	retlw	193
   689  0531  34FF               	retlw	255
   690  0532  3480               	retlw	128
   691  0533  34F6               	retlw	246
   692  0534  34F6               	retlw	246
   693  0535  34F6               	retlw	246
   694  0536  34F9               	retlw	249
   695  0537  34FF               	retlw	255
   696  0538  34C1               	retlw	193
   697  0539  34BE               	retlw	190
   698  053A  34AE               	retlw	174
   699  053B  34DE               	retlw	222
   700  053C  34A1               	retlw	161
   701  053D  34FF               	retlw	255
   702  053E  3480               	retlw	128
   703  053F  34F6               	retlw	246
   704  0540  34E6               	retlw	230
   705  0541  34D6               	retlw	214
   706  0542  34B9               	retlw	185
   707  0543  34FF               	retlw	255
   708  0544  34D9               	retlw	217
   709  0545  34B6               	retlw	182
   710  0546  34B6               	retlw	182
   711  0547  34B6               	retlw	182
   712  0548  34CD               	retlw	205
   713  0549  34FF               	retlw	255
   714  054A  34FE               	retlw	254
   715  054B  34FE               	retlw	254
   716  054C  3480               	retlw	128
   717  054D  34FE               	retlw	254
   718  054E  34FE               	retlw	254
   719  054F  34FF               	retlw	255
   720  0550  34C0               	retlw	192
   721  0551  34BF               	retlw	191
   722  0552  34BF               	retlw	191
   723  0553  34BF               	retlw	191
   724  0554  34C0               	retlw	192
   725  0555  34FF               	retlw	255
   726  0556  34E0               	retlw	224
   727  0557  34DF               	retlw	223
   728  0558  34BF               	retlw	191
   729  0559  34DF               	retlw	223
   730  055A  34E0               	retlw	224
   731  055B  34FF               	retlw	255
   732  055C  34C0               	retlw	192
   733  055D  34BF               	retlw	191
   734  055E  34CF               	retlw	207
   735  055F  34BF               	retlw	191
   736  0560  34C0               	retlw	192
   737  0561  34FF               	retlw	255
   738  0562  349C               	retlw	156
   739  0563  34EB               	retlw	235
   740  0564  34F7               	retlw	247
   741  0565  34EB               	retlw	235
   742  0566  349C               	retlw	156
   743  0567  34FF               	retlw	255
   744  0568  34FC               	retlw	252
   745  0569  34FB               	retlw	251
   746  056A  3487               	retlw	135
   747  056B  34FB               	retlw	251
   748  056C  34FC               	retlw	252
   749  056D  34FF               	retlw	255
   750  056E  349E               	retlw	158
   751  056F  34AE               	retlw	174
   752  0570  34B6               	retlw	182
   753  0571  34BA               	retlw	186
   754  0572  34BC               	retlw	188
   755  0573  34FF               	retlw	255
   756  0574  34FF               	retlw	255
   757  0575  3480               	retlw	128
   758  0576  34BE               	retlw	190
   759  0577  34BE               	retlw	190
   760  0578  34FF               	retlw	255
   761  0579  34FF               	retlw	255
   762  057A  34FD               	retlw	253
   763  057B  34FB               	retlw	251
   764  057C  34F7               	retlw	247
   765  057D  34EF               	retlw	239
   766  057E  34DF               	retlw	223
   767  057F  34FF               	retlw	255
   768  0580  34FF               	retlw	255
   769  0581  34BE               	retlw	190
   770  0582  34BE               	retlw	190
   771  0583  3480               	retlw	128
   772  0584  34FF               	retlw	255
   773  0585  34FF               	retlw	255
   774  0586  34FB               	retlw	251
   775  0587  34FD               	retlw	253
   776  0588  34FE               	retlw	254
   777  0589  34FD               	retlw	253
   778  058A  34FB               	retlw	251
   779  058B  34FF               	retlw	255
   780  058C  347F               	retlw	127
   781  058D  347F               	retlw	127
   782  058E  347F               	retlw	127
   783  058F  347F               	retlw	127
   784  0590  347F               	retlw	127
   785  0591  34FF               	retlw	255
   786  0592  34FF               	retlw	255
   787  0593  34FF               	retlw	255
   788  0594  34F8               	retlw	248
   789  0595  34F4               	retlw	244
   790  0596  34FF               	retlw	255
   791  0597  34FF               	retlw	255
   792  0598  34DF               	retlw	223
   793  0599  34AB               	retlw	171
   794  059A  34AB               	retlw	171
   795  059B  34AB               	retlw	171
   796  059C  34C7               	retlw	199
   797  059D  34FF               	retlw	255
   798  059E  3480               	retlw	128
   799  059F  34C7               	retlw	199
   800  05A0  34BB               	retlw	187
   801  05A1  34BB               	retlw	187
   802  05A2  34C7               	retlw	199
   803  05A3  34FF               	retlw	255
   804  05A4  34FF               	retlw	255
   805  05A5  34C7               	retlw	199
   806  05A6  34BB               	retlw	187
   807  05A7  34BB               	retlw	187
   808  05A8  34BB               	retlw	187
   809  05A9  34FF               	retlw	255
   810  05AA  34C7               	retlw	199
   811  05AB  34BB               	retlw	187
   812  05AC  34BB               	retlw	187
   813  05AD  34C7               	retlw	199
   814  05AE  3480               	retlw	128
   815  05AF  34FF               	retlw	255
   816  05B0  34C7               	retlw	199
   817  05B1  34AB               	retlw	171
   818  05B2  34AB               	retlw	171
   819  05B3  34AB               	retlw	171
   820  05B4  34F7               	retlw	247
   821  05B5  34FF               	retlw	255
   822  05B6  34F7               	retlw	247
   823  05B7  3481               	retlw	129
   824  05B8  34F6               	retlw	246
   825  05B9  34F6               	retlw	246
   826  05BA  34FD               	retlw	253
   827  05BB  34FF               	retlw	255
   828  05BC  34F7               	retlw	247
   829  05BD  34AB               	retlw	171
   830  05BE  34AB               	retlw	171
   831  05BF  34AB               	retlw	171
   832  05C0  34C3               	retlw	195
   833  05C1  34FF               	retlw	255
   834  05C2  3480               	retlw	128
   835  05C3  34F7               	retlw	247
   836  05C4  34FB               	retlw	251
   837  05C5  34FB               	retlw	251
   838  05C6  3487               	retlw	135
   839  05C7  34FF               	retlw	255
   840  05C8  34FF               	retlw	255
   841  05C9  34BB               	retlw	187
   842  05CA  3482               	retlw	130
   843  05CB  34BF               	retlw	191
   844  05CC  34FF               	retlw	255
   845  05CD  34FF               	retlw	255
   846  05CE  34DF               	retlw	223
   847  05CF  34BF               	retlw	191
   848  05D0  34BB               	retlw	187
   849  05D1  34C2               	retlw	194
   850  05D2  34FF               	retlw	255
   851  05D3  34FF               	retlw	255
   852  05D4  34FF               	retlw	255
   853  05D5  3480               	retlw	128
   854  05D6  34EF               	retlw	239
   855  05D7  34D7               	retlw	215
   856  05D8  34BB               	retlw	187
   857  05D9  34FF               	retlw	255
   858  05DA  34FF               	retlw	255
   859  05DB  34BE               	retlw	190
   860  05DC  3480               	retlw	128
   861  05DD  34BF               	retlw	191
   862  05DE  34FF               	retlw	255
   863  05DF  34FF               	retlw	255
   864  05E0  3483               	retlw	131
   865  05E1  34FB               	retlw	251
   866  05E2  3487               	retlw	135
   867  05E3  34FB               	retlw	251
   868  05E4  3487               	retlw	135
   869  05E5  34FF               	retlw	255
   870  05E6  3483               	retlw	131
   871  05E7  34F7               	retlw	247
   872  05E8  34FB               	retlw	251
   873  05E9  34FB               	retlw	251
   874  05EA  3487               	retlw	135
   875  05EB  34FF               	retlw	255
   876  05EC  34C7               	retlw	199
   877  05ED  34BB               	retlw	187
   878  05EE  34BB               	retlw	187
   879  05EF  34BB               	retlw	187
   880  05F0  34C7               	retlw	199
   881  05F1  34FF               	retlw	255
   882  05F2  3483               	retlw	131
   883  05F3  34EB               	retlw	235
   884  05F4  34EB               	retlw	235
   885  05F5  34EB               	retlw	235
   886  05F6  34F7               	retlw	247
   887  05F7  34FF               	retlw	255
   888  05F8  34F7               	retlw	247
   889  05F9  34EB               	retlw	235
   890  05FA  34EB               	retlw	235
   891  05FB  34EB               	retlw	235
   892  05FC  3483               	retlw	131
   893  05FD  34FF               	retlw	255
   894  05FE  3483               	retlw	131
   895  05FF  34F7               	retlw	247
   896  0600  34FB               	retlw	251
   897  0601  34FB               	retlw	251
   898  0602  34F7               	retlw	247
   899  0603  34FF               	retlw	255
   900  0604  34B7               	retlw	183
   901  0605  34AB               	retlw	171
   902  0606  34AB               	retlw	171
   903  0607  34AB               	retlw	171
   904  0608  34DB               	retlw	219
   905  0609  34FF               	retlw	255
   906  060A  34FF               	retlw	255
   907  060B  34FB               	retlw	251
   908  060C  34C0               	retlw	192
   909  060D  34BB               	retlw	187
   910  060E  34BB               	retlw	187
   911  060F  34FF               	retlw	255
   912  0610  34C3               	retlw	195
   913  0611  34BF               	retlw	191
   914  0612  34BF               	retlw	191
   915  0613  34DF               	retlw	223
   916  0614  3483               	retlw	131
   917  0615  34FF               	retlw	255
   918  0616  34E3               	retlw	227
   919  0617  34DF               	retlw	223
   920  0618  34BF               	retlw	191
   921  0619  34DF               	retlw	223
   922  061A  34E3               	retlw	227
   923  061B  34FF               	retlw	255
   924  061C  34C3               	retlw	195
   925  061D  34BF               	retlw	191
   926  061E  34CF               	retlw	207
   927  061F  34BF               	retlw	191
   928  0620  34C3               	retlw	195
   929  0621  34FF               	retlw	255
   930  0622  34BB               	retlw	187
   931  0623  34D7               	retlw	215
   932  0624  34EF               	retlw	239
   933  0625  34D7               	retlw	215
   934  0626  34BB               	retlw	187
   935  0627  34FF               	retlw	255
   936  0628  34F3               	retlw	243
   937  0629  34AF               	retlw	175
   938  062A  34AF               	retlw	175
   939  062B  34AF               	retlw	175
   940  062C  34C3               	retlw	195
   941  062D  34FF               	retlw	255
   942  062E  34BB               	retlw	187
   943  062F  349B               	retlw	155
   944  0630  34AB               	retlw	171
   945  0631  34B3               	retlw	179
   946  0632  34BB               	retlw	187
   947  0633  34FF               	retlw	255
   948  0634  34FB               	retlw	251
   949  0635  34E1               	retlw	225
   950  0636  34E0               	retlw	224
   951  0637  34E1               	retlw	225
   952  0638  34FB               	retlw	251
   953  0639  34FF               	retlw	255
   954  063A  34E3               	retlw	227
   955  063B  34E3               	retlw	227
   956  063C  34C1               	retlw	193
   957  063D  34E3               	retlw	227
   958  063E  34F7               	retlw	247
   959  063F  34FF               	retlw	255
   960  0640  34F7               	retlw	247
   961  0641  34E3               	retlw	227
   962  0642  34C1               	retlw	193
   963  0643  34E3               	retlw	227
   964  0644  34E3               	retlw	227
   965  0645  34FF               	retlw	255
   966  0646  34EF               	retlw	239
   967  0647  34C3               	retlw	195
   968  0648  3483               	retlw	131
   969  0649  34C3               	retlw	195
   970  064A  34EF               	retlw	239
   971  064B  34FF               	retlw	255
   972  064C  34FF               	retlw	255
   973  064D  34FF               	retlw	255
   974  064E  34FF               	retlw	255
   975  064F  34FF               	retlw	255
   976  0650  34FF               	retlw	255
   977  0651  34FF               	retlw	255
   978  0652  3400               	retlw	0
   979  0653  3400               	retlw	0
   980  0654  3400               	retlw	0
   981  0655  3400               	retlw	0
   982  0656  3400               	retlw	0
   983  0657  3400               	retlw	0
   984  0658                     __end_of_font:	
   985  000E                     _TMR1	set	14
   986  0018                     _RCSTAbits	set	24
   987  001E                     _ADRESH	set	30
   988  001A                     _RCREG	set	26
   989  000B                     _INTCONbits	set	11
   990  0010                     _T1CONbits	set	16
   991  0001                     _TMR0	set	1
   992  000C                     _PIR1bits	set	12
   993  001F                     _ADCON0bits	set	31
   994  0042                     _RD2	set	66
   995  0043                     _RD3	set	67
   996  0044                     _RD4	set	68
   997  0040                     _RD0	set	64
   998  0041                     _RD1	set	65
   999  0065                     _RCIF	set	101
  1000  003B                     _RC3	set	59
  1001  003A                     _RC2	set	58
  1002  0039                     _RC1	set	57
  1003  0038                     _RC0	set	56
  1004  00FD                     _CHS3	set	253
  1005  00FC                     _CHS2	set	252
  1006  00FB                     _CHS1	set	251
  1007  0099                     _SPBRG	set	153
  1008  0098                     _TXSTAbits	set	152
  1009  009E                     _ADRESL	set	158
  1010  008C                     _PIE1bits	set	140
  1011  0086                     _TRISBbits	set	134
  1012  0081                     _OPTION_REGbits	set	129
  1013  009F                     _ADCON1bits	set	159
  1014  0437                     _TRISB7	set	1079
  1015  0436                     _TRISB6	set	1078
  1016  0435                     _TRISB5	set	1077
  1017  0434                     _TRISB4	set	1076
  1018  0433                     _TRISB3	set	1075
  1019  0432                     _TRISB2	set	1074
  1020  0431                     _TRISB1	set	1073
  1021  0430                     _TRISB0	set	1072
  1022  043F                     _TRISC7	set	1087
  1023  043E                     _TRISC6	set	1086
  1024  0444                     _TRISD4	set	1092
  1025  0443                     _TRISD3	set	1091
  1026  0442                     _TRISD2	set	1090
  1027  0441                     _TRISD1	set	1089
  1028  0440                     _TRISD0	set	1088
  1029  043B                     _TRISC3	set	1083
  1030  043A                     _TRISC2	set	1082
  1031  0439                     _TRISC1	set	1081
  1032  0438                     _TRISC0	set	1080
  1033  04FD                     _VCFG1	set	1277
  1034  0188                     _ANSEL	set	392
  1035  0189                     _ANSELH	set	393
  1036  0658                     STR_1:	
  1037  0658  340D               	retlw	13
  1038  0659  340A               	retlw	10
  1039  065A  3400               	retlw	0
  1040                           
  1041                           ; #config settings
  1042  0000                     
  1043                           	psect	cinit
  1044  0015                     start_initialization:	
  1045  0015                     __initialization:	
  1046                           
  1047                           ;initializer for _mode
  1048  0015  3001               	movlw	1
  1049  0016  00DA               	movwf	__pdataBANK0& (0+127)
  1050  0017  30A0               	movlw	low __pbssBANK1
  1051                           
  1052                           ; Clear objects allocated to BANK1
  1053  0018  1383               	bcf	3,7	;select IRP bank0
  1054  0019  0084               	movwf	4
  1055  001A  30BE               	movlw	low (__pbssBANK1+30)
  1056  001B  120A  118A  26E7  120A  118A  	fcall	clear_ram0
  1057                           
  1058                           ; Clear objects allocated to BANK0
  1059  0020  3042               	movlw	low __pbssBANK0
  1060  0021  0084               	movwf	4
  1061  0022  305A               	movlw	low (__pbssBANK0+24)
  1062  0023  120A  118A  26E7   	fcall	clear_ram0
  1063  0026                     end_of_initialization:	
  1064                           ;End of C runtime variable initialization code
  1065                           
  1066  0026                     __end_of__initialization:	
  1067  0026  0183               	clrf	3
  1068  0027  120A  118A  2E5B   	ljmp	_main	;jump to C main() function
  1069                           
  1070                           	psect	bssBANK0
  1071  0042                     __pbssBANK0:	
  1072  0042                     _adc_lm35:	
  1073  0042                     	ds	4
  1074  0046                     _CountNext:	
  1075  0046                     	ds	2
  1076  0048                     _cout:	
  1077  0048                     	ds	2
  1078  004A                     _LenghString:	
  1079  004A                     	ds	2
  1080  004C                     _next:	
  1081  004C                     	ds	2
  1082  004E                     _pos:	
  1083  004E                     	ds	1
  1084  004F                     _OldString:	
  1085  004F                     	ds	1
  1086  0050                     _ColFont:	
  1087  0050                     	ds	1
  1088  0051                     _SelFont:	
  1089  0051                     	ds	1
  1090  0052                     _TempFont:	
  1091  0052                     	ds	1
  1092  0053                     _i:	
  1093  0053                     	ds	1
  1094  0054                     _count:	
  1095  0054                     	ds	1
  1096  0055                     _Adc_lm35String:	
  1097  0055                     	ds	5
  1098                           
  1099                           	psect	dataBANK0
  1100  005A                     __pdataBANK0:	
  1101  005A                     _mode:	
  1102  005A                     	ds	1
  1103                           
  1104                           	psect	bssBANK1
  1105  00A0                     __pbssBANK1:	
  1106  00A0                     _StringReceive:	
  1107  00A0                     	ds	30
  1108                           
  1109                           	psect	clrtext
  1110  06E7                     clear_ram0:	
  1111                           ;	Called with FSR containing the base address, and
  1112                           ;	W with the last address+1
  1113                           
  1114  06E7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1115  06E8                     clrloop0:	
  1116  06E8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1117  06E9  0A84               	incf	4,f	;increment pointer
  1118  06EA  0604               	xorwf	4,w	;XOR with final address
  1119  06EB  1903               	btfsc	3,2	;have we reached the end yet?
  1120  06EC  3400               	retlw	0	;all done for this memory range, return
  1121  06ED  0604               	xorwf	4,w	;XOR again to restore value
  1122  06EE  2EE8               	goto	clrloop0	;do the next byte
  1123                           
  1124                           	psect	cstackBANK1
  1125  0000                     __pcstackBANK1:	
  1126  0000                     ??_InitLedMatrix:	
  1127  0000                     ??_InitKeyPad:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0000                     ??_InitUART:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0000                     ??_main:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136                           
  1137                           	psect	cstackCOMMON
  1138  0070                     __pcstackCOMMON:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_InitLedMatrix:	
  1142  0070                     ?_InitKeyPad:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_InitUART:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_display:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?_main:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ?_ISR:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_Ic74595_Write:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?___lbmod:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ?_strcmp:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_strlen:	
  1167                           ; 2 bytes @ 0x0
  1168                           
  1169  0070                     ?___lwmod:	
  1170                           ; 2 bytes @ 0x0
  1171                           
  1172  0070                     ?___ftpack:	
  1173                           ; 2 bytes @ 0x0
  1174                           
  1175  0070                     ?___aldiv:	
  1176                           ; 3 bytes @ 0x0
  1177                           
  1178  0070                     ?___almod:	
  1179                           ; 4 bytes @ 0x0
  1180                           
  1181  0070                     Ic74595_Write@ic:	
  1182                           ; 4 bytes @ 0x0
  1183                           
  1184  0070                     ___lbmod@divisor:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     strcmp@s2:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ___lwmod@divisor:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ___ftpack@arg:	
  1194                           ; 2 bytes @ 0x0
  1195                           
  1196  0070                     ___aldiv@divisor:	
  1197                           ; 3 bytes @ 0x0
  1198                           
  1199  0070                     ___almod@divisor:	
  1200                           ; 4 bytes @ 0x0
  1201                           
  1202                           
  1203                           ; 4 bytes @ 0x0
  1204  0070                     	ds	1
  1205  0071                     ??___lbmod:	
  1206  0071                     Ic74595_Write@bits:	
  1207                           ; 1 bytes @ 0x1
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x1
  1211  0071                     	ds	1
  1212  0072                     ??_strcmp:	
  1213  0072                     ??_Ic74595_Write:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216  0072                     ___lbmod@dividend:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219  0072                     ___lwmod@dividend:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x2
  1224  0072                     	ds	1
  1225  0073                     ??_strlen:	
  1226  0073                     ___ftpack@exp:	
  1227                           ; 1 bytes @ 0x3
  1228                           
  1229  0073                     ___lbmod@counter:	
  1230                           ; 1 bytes @ 0x3
  1231                           
  1232  0073                     strlen@s:	
  1233                           ; 1 bytes @ 0x3
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0x3
  1237  0073                     	ds	1
  1238  0074                     ??___lwmod:	
  1239  0074                     Ic74595_Write@data:	
  1240                           ; 1 bytes @ 0x4
  1241                           
  1242  0074                     ___ftpack@sign:	
  1243                           ; 1 bytes @ 0x4
  1244                           
  1245  0074                     ___lbmod@rem:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248  0074                     ___lwmod@counter:	
  1249                           ; 1 bytes @ 0x4
  1250                           
  1251  0074                     strcmp@r:	
  1252                           ; 1 bytes @ 0x4
  1253                           
  1254  0074                     strlen@cp:	
  1255                           ; 1 bytes @ 0x4
  1256                           
  1257  0074                     ___aldiv@dividend:	
  1258                           ; 1 bytes @ 0x4
  1259                           
  1260  0074                     ___almod@dividend:	
  1261                           ; 4 bytes @ 0x4
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0x4
  1265  0074                     	ds	1
  1266  0075                     ??___ftpack:	
  1267  0075                     ?___wmul:	
  1268                           ; 1 bytes @ 0x5
  1269                           
  1270  0075                     ?___lwdiv:	
  1271                           ; 2 bytes @ 0x5
  1272                           
  1273  0075                     strcmp@s1:	
  1274                           ; 2 bytes @ 0x5
  1275                           
  1276  0075                     ___wmul@multiplier:	
  1277                           ; 1 bytes @ 0x5
  1278                           
  1279  0075                     ___lwdiv@divisor:	
  1280                           ; 2 bytes @ 0x5
  1281                           
  1282                           
  1283                           ; 2 bytes @ 0x5
  1284  0075                     	ds	2
  1285  0077                     ___wmul@multiplicand:	
  1286  0077                     ___lwdiv@dividend:	
  1287                           ; 2 bytes @ 0x7
  1288                           
  1289                           
  1290                           ; 2 bytes @ 0x7
  1291  0077                     	ds	1
  1292  0078                     ??___aldiv:	
  1293  0078                     ??___almod:	
  1294                           ; 1 bytes @ 0x8
  1295                           
  1296  0078                     ?___altoft:	
  1297                           ; 1 bytes @ 0x8
  1298                           
  1299  0078                     ___aldiv@counter:	
  1300                           ; 3 bytes @ 0x8
  1301                           
  1302  0078                     ___almod@counter:	
  1303                           ; 1 bytes @ 0x8
  1304                           
  1305  0078                     ___altoft@c:	
  1306                           ; 1 bytes @ 0x8
  1307                           
  1308                           
  1309                           ; 4 bytes @ 0x8
  1310  0078                     	ds	1
  1311  0079                     ??___wmul:	
  1312  0079                     ??___lwdiv:	
  1313                           ; 1 bytes @ 0x9
  1314                           
  1315  0079                     ___aldiv@sign:	
  1316                           ; 1 bytes @ 0x9
  1317                           
  1318  0079                     ___almod@sign:	
  1319                           ; 1 bytes @ 0x9
  1320                           
  1321  0079                     ___wmul@product:	
  1322                           ; 1 bytes @ 0x9
  1323                           
  1324  0079                     ___lwdiv@quotient:	
  1325                           ; 2 bytes @ 0x9
  1326                           
  1327                           
  1328                           ; 2 bytes @ 0x9
  1329  0079                     	ds	1
  1330  007A                     ___aldiv@quotient:	
  1331                           
  1332                           ; 4 bytes @ 0xA
  1333  007A                     	ds	1
  1334  007B                     ___lwdiv@counter:	
  1335                           
  1336                           ; 1 bytes @ 0xB
  1337  007B                     	ds	1
  1338  007C                     ??___altoft:	
  1339  007C                     display@StringDisplay:	
  1340                           ; 1 bytes @ 0xC
  1341                           
  1342  007C                     ___altoft@exp:	
  1343                           ; 1 bytes @ 0xC
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0xC
  1347  007C                     	ds	1
  1348  007D                     ___altoft@sign:	
  1349                           
  1350                           ; 1 bytes @ 0xD
  1351  007D                     	ds	1
  1352                           
  1353                           	psect	cstackBANK0
  1354  0020                     __pcstackBANK0:	
  1355  0020                     ??_display:	
  1356  0020                     ?___ftmul:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0020                     ___ftmul@f1:	
  1360                           ; 3 bytes @ 0x0
  1361                           
  1362                           
  1363                           ; 3 bytes @ 0x0
  1364  0020                     	ds	3
  1365  0023                     ___ftmul@f2:	
  1366                           
  1367                           ; 3 bytes @ 0x3
  1368  0023                     	ds	3
  1369  0026                     ??___ftmul:	
  1370                           
  1371                           ; 1 bytes @ 0x6
  1372  0026                     	ds	3
  1373  0029                     ___ftmul@exp:	
  1374                           
  1375                           ; 1 bytes @ 0x9
  1376  0029                     	ds	1
  1377  002A                     ___ftmul@f3_as_product:	
  1378                           
  1379                           ; 3 bytes @ 0xA
  1380  002A                     	ds	3
  1381  002D                     ___ftmul@cntr:	
  1382                           
  1383                           ; 1 bytes @ 0xD
  1384  002D                     	ds	1
  1385  002E                     ___ftmul@sign:	
  1386                           
  1387                           ; 1 bytes @ 0xE
  1388  002E                     	ds	1
  1389  002F                     ?___fttol:	
  1390  002F                     ___fttol@f1:	
  1391                           ; 4 bytes @ 0xF
  1392                           
  1393                           
  1394                           ; 3 bytes @ 0xF
  1395  002F                     	ds	4
  1396  0033                     ??___fttol:	
  1397                           
  1398                           ; 1 bytes @ 0x13
  1399  0033                     	ds	3
  1400  0036                     ___fttol@sign1:	
  1401                           
  1402                           ; 1 bytes @ 0x16
  1403  0036                     	ds	1
  1404  0037                     ___fttol@lval:	
  1405                           
  1406                           ; 4 bytes @ 0x17
  1407  0037                     	ds	4
  1408  003B                     ___fttol@exp1:	
  1409                           
  1410                           ; 1 bytes @ 0x1B
  1411  003B                     	ds	1
  1412  003C                     ??_ISR:	
  1413                           
  1414                           ; 1 bytes @ 0x1C
  1415  003C                     	ds	6
  1416                           
  1417                           	psect	maintext
  1418  065B                     __pmaintext:	
  1419 ;;
  1420 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1421 ;;
  1422 ;; *************** function _main *****************
  1423 ;; Defined at:
  1424 ;;		line 133 in file "main.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : B00/0
  1435 ;;		On exit  : 200/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels required when called:    4
  1444 ;; This function calls:
  1445 ;;		_InitKeyPad
  1446 ;;		_InitLedMatrix
  1447 ;;		_InitUART
  1448 ;; This function is called by:
  1449 ;;		Startup code after reset
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _main
  1455  065B                     _main:	
  1456                           
  1457                           ;main.c: 136: ANSELH = 0;
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1461  065B  1683               	bsf	3,5	;RP0=1, select bank3
  1462  065C  1703               	bsf	3,6	;RP1=1, select bank3
  1463  065D  0189               	clrf	9	;volatile
  1464                           
  1465                           ;main.c: 137: ANSEL = 1;
  1466  065E  3001               	movlw	1
  1467  065F  0088               	movwf	8	;volatile
  1468                           
  1469                           ;main.c: 138: ADCON0bits.CHS0 = CHS1 = CHS2 = CHS3 = 0;
  1470  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0662  129F               	bcf	31,5	;volatile
  1473  0663  121F               	bcf	31,4	;volatile
  1474  0664  119F               	bcf	31,3	;volatile
  1475  0665  1D9F               	btfss	31,3	;volatile
  1476  0666  2E6B               	goto	u1750
  1477  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0669  151F               	bsf	31,2	;volatile
  1480  066A  2E6E               	goto	l1930
  1481  066B                     u1750:	
  1482  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1483  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1484  066D  111F               	bcf	31,2	;volatile
  1485  066E                     l1930:	
  1486                           
  1487                           ;main.c: 139: ADCON0bits.ADON = 1;
  1488  066E  141F               	bsf	31,0	;volatile
  1489                           
  1490                           ;main.c: 140: ADCON0bits.ADCS1 = 0;
  1491  066F  139F               	bcf	31,7	;volatile
  1492                           
  1493                           ;main.c: 141: ADCON0bits.ADCS0 = 0;
  1494  0670  131F               	bcf	31,6	;volatile
  1495                           
  1496                           ;main.c: 142: ADCON1bits.ADFM = 1;
  1497  0671  1683               	bsf	3,5	;RP0=1, select bank1
  1498  0672  179F               	bsf	31,7	;volatile
  1499                           
  1500                           ;main.c: 143: ADCON1bits.VCFG0 = VCFG1 = 0;
  1501  0673  129F               	bcf	31,5	;volatile
  1502  0674  1E9F               	btfss	31,5	;volatile
  1503  0675  2E7A               	goto	u1770
  1504  0676  1683               	bsf	3,5	;RP0=1, select bank1
  1505  0677  1303               	bcf	3,6	;RP1=0, select bank1
  1506  0678  161F               	bsf	31,4	;volatile
  1507  0679  2E7D               	goto	l1940
  1508  067A                     u1770:	
  1509  067A  1683               	bsf	3,5	;RP0=1, select bank1
  1510  067B  1303               	bcf	3,6	;RP1=0, select bank1
  1511  067C  121F               	bcf	31,4	;volatile
  1512  067D                     l1940:	
  1513                           
  1514                           ;main.c: 144: PIR1bits.ADIF = 0;
  1515  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1516  067E  130C               	bcf	12,6	;volatile
  1517                           
  1518                           ;main.c: 145: ADCON0bits.GO_nDONE = 1;
  1519  067F  149F               	bsf	31,1	;volatile
  1520                           
  1521                           ;main.c: 148: (TRISC0=TRISC1=TRISC2=TRISC3=0);
  1522  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0681  1187               	bcf	7,3	;volatile
  1524  0682  1107               	bcf	7,2	;volatile
  1525  0683  1087               	bcf	7,1	;volatile
  1526  0684  1007               	bcf	7,0	;volatile
  1527                           
  1528                           ;main.c: 149: {RC0 = (0 & 1); RC1 = ((0>>1) & 1); RC2= ((0>>2) & 1); RC3 = ((0>>3) & 1);
      +                          };
  1529  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0686  1007               	bcf	7,0	;volatile
  1531  0687  1087               	bcf	7,1	;volatile
  1532  0688  1107               	bcf	7,2	;volatile
  1533  0689  1187               	bcf	7,3	;volatile
  1534                           
  1535                           ;main.c: 150: OPTION_REGbits.nRBPU = 0;
  1536  068A  1683               	bsf	3,5	;RP0=1, select bank1
  1537  068B  1381               	bcf	1,7	;volatile
  1538                           
  1539                           ;main.c: 151: TRISBbits.TRISB0 = 1;
  1540  068C  1406               	bsf	6,0	;volatile
  1541                           
  1542                           ;main.c: 154: TMR0 = 56;
  1543  068D  3038               	movlw	56
  1544  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1545  068F  0081               	movwf	1	;volatile
  1546                           
  1547                           ;main.c: 155: OPTION_REGbits.T0CS = 0;
  1548  0690  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0691  1281               	bcf	1,5	;volatile
  1550                           
  1551                           ;main.c: 156: OPTION_REGbits.PSA = 0;
  1552  0692  1181               	bcf	1,3	;volatile
  1553                           
  1554                           ;main.c: 157: OPTION_REGbits.PS2 = 0;
  1555  0693  1101               	bcf	1,2	;volatile
  1556                           
  1557                           ;main.c: 158: OPTION_REGbits.PS1 = 0;
  1558  0694  1081               	bcf	1,1	;volatile
  1559                           
  1560                           ;main.c: 159: OPTION_REGbits.PS0 = 0;
  1561  0695  1001               	bcf	1,0	;volatile
  1562                           
  1563                           ;main.c: 162: TMR1 = 65336;
  1564  0696  30FF               	movlw	255
  1565  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0698  008F               	movwf	15	;volatile
  1567  0699  3038               	movlw	56
  1568  069A  008E               	movwf	14	;volatile
  1569                           
  1570                           ;main.c: 163: T1CONbits.TMR1CS = 0;
  1571  069B  1090               	bcf	16,1	;volatile
  1572                           
  1573                           ;main.c: 164: T1CONbits.T1CKPS1 = 0;
  1574  069C  1290               	bcf	16,5	;volatile
  1575                           
  1576                           ;main.c: 165: T1CONbits.T1CKPS0 = 0;
  1577  069D  1210               	bcf	16,4	;volatile
  1578                           
  1579                           ;main.c: 166: T1CONbits.TMR1ON = 1;
  1580  069E  1410               	bsf	16,0	;volatile
  1581                           
  1582                           ;main.c: 167: PIR1bits.TMR1IF = 0;
  1583  069F  100C               	bcf	12,0	;volatile
  1584                           
  1585                           ;main.c: 180: INTCONbits.GIE = 1;
  1586  06A0  178B               	bsf	11,7	;volatile
  1587                           
  1588                           ;main.c: 181: INTCONbits.PEIE = 1;
  1589  06A1  170B               	bsf	11,6	;volatile
  1590                           
  1591                           ;main.c: 183: INTCONbits.TMR0IE = 1;
  1592  06A2  168B               	bsf	11,5	;volatile
  1593                           
  1594                           ;main.c: 189: PIE1bits.RCIE = 1;
  1595  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  1596  06A4  168C               	bsf	12,5	;volatile
  1597                           
  1598                           ;main.c: 192: InitLedMatrix();
  1599  06A5  120A  118A  26EF  120A  118A  	fcall	_InitLedMatrix
  1600                           
  1601                           ;main.c: 193: InitKeyPad();
  1602  06AA  120A  118A  26B7  120A  118A  	fcall	_InitKeyPad
  1603                           
  1604                           ;main.c: 194: InitUART();
  1605  06AF  120A  118A  26D8  120A  118A  	fcall	_InitUART
  1606                           
  1607                           ;main.c: 198: OPTION_REGbits.nRBPU = 0;
  1608  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  1609  06B5  1381               	bcf	1,7	;volatile
  1610  06B6                     l136:	
  1611                           ;main.c: 201: while (1)
  1612                           
  1613                           
  1614                           ;main.c: 202: {
  1615  06B6  2EB6               	goto	l136
  1616  06B7                     __end_of_main:	
  1617                           
  1618                           	psect	text1
  1619  06D8                     __ptext1:	
  1620 ;; *************** function _InitUART *****************
  1621 ;; Defined at:
  1622 ;;		line 10 in file "esp8266.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg
  1631 ;; Tracked objects:
  1632 ;;		On entry : 300/100
  1633 ;;		On exit  : 300/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0
  1639 ;;      Totals:         0       0       0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    3
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function _InitUART
  1652  06D8                     _InitUART:	
  1653                           
  1654                           ;esp8266.c: 13: TRISC6 = 0;
  1655                           
  1656                           ;incstack = 0
  1657                           ; Regs used in _InitUART: [wreg]
  1658  06D8  1307               	bcf	7,6	;volatile
  1659                           
  1660                           ;esp8266.c: 14: TRISC7 = 1;
  1661  06D9  1787               	bsf	7,7	;volatile
  1662                           
  1663                           ;esp8266.c: 17: TXSTAbits.BRGH = 1;
  1664  06DA  1518               	bsf	24,2	;volatile
  1665                           
  1666                           ;esp8266.c: 18: SPBRG = (8000000 / (9600 * 16)) - 1;
  1667  06DB  3062               	movlw	98
  1668  06DC  0099               	movwf	25	;volatile
  1669                           
  1670                           ;esp8266.c: 21: TXSTAbits.SYNC = 0;
  1671  06DD  1218               	bcf	24,4	;volatile
  1672                           
  1673                           ;esp8266.c: 22: RCSTAbits.SPEN = 1;
  1674  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1675  06DF  1798               	bsf	24,7	;volatile
  1676                           
  1677                           ;esp8266.c: 24: TXSTAbits.TXEN = 1;
  1678  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  1679  06E1  1698               	bsf	24,5	;volatile
  1680                           
  1681                           ;esp8266.c: 25: TXSTAbits.TX9 = 0;
  1682  06E2  1318               	bcf	24,6	;volatile
  1683                           
  1684                           ;esp8266.c: 28: RCSTAbits.CREN = 1;
  1685  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1686  06E4  1618               	bsf	24,4	;volatile
  1687                           
  1688                           ;esp8266.c: 30: RCSTAbits.RX9 = 0;
  1689  06E5  1318               	bcf	24,6	;volatile
  1690  06E6  0008               	return
  1691  06E7                     __end_of_InitUART:	
  1692                           
  1693                           	psect	text2
  1694  06EF                     __ptext2:	
  1695 ;; *************** function _InitLedMatrix *****************
  1696 ;; Defined at:
  1697 ;;		line 262 in file "LedMatrix.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		None
  1706 ;; Tracked objects:
  1707 ;;		On entry : 300/100
  1708 ;;		On exit  : 300/100
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    3
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _InitLedMatrix
  1727  06EF                     _InitLedMatrix:	
  1728                           
  1729                           ;LedMatrix.c: 264: (TRISD0=TRISD1=TRISD2=TRISD3=TRISD4=0);
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _InitLedMatrix: []
  1733  06EF  1208               	bcf	8,4	;volatile
  1734  06F0  1188               	bcf	8,3	;volatile
  1735  06F1  1108               	bcf	8,2	;volatile
  1736  06F2  1088               	bcf	8,1	;volatile
  1737  06F3  1008               	bcf	8,0	;volatile
  1738  06F4  0008               	return
  1739  06F5                     __end_of_InitLedMatrix:	
  1740                           
  1741                           	psect	text3
  1742  06B7                     __ptext3:	
  1743 ;; *************** function _InitKeyPad *****************
  1744 ;; Defined at:
  1745 ;;		line 18 in file "KeyPad.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		None
  1754 ;; Tracked objects:
  1755 ;;		On entry : 300/100
  1756 ;;		On exit  : 300/100
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    3
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _InitKeyPad
  1775  06B7                     _InitKeyPad:	
  1776                           
  1777                           ;KeyPad.c: 20: (TRISB0=TRISB1=TRISB2=TRISB3=0);
  1778                           
  1779                           ;incstack = 0
  1780                           ; Regs used in _InitKeyPad: []
  1781  06B7  1186               	bcf	6,3	;volatile
  1782  06B8  1106               	bcf	6,2	;volatile
  1783  06B9  1086               	bcf	6,1	;volatile
  1784  06BA  1006               	bcf	6,0	;volatile
  1785                           
  1786                           ;KeyPad.c: 21: (TRISB4=TRISB5=TRISB6=TRISB7=1);
  1787  06BB  1786               	bsf	6,7	;volatile
  1788  06BC  1F86               	btfss	6,7	;volatile
  1789  06BD  2EC2               	goto	u1710
  1790  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  1791  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  1792  06C0  1706               	bsf	6,6	;volatile
  1793  06C1  2EC5               	goto	u1724
  1794  06C2                     u1710:	
  1795  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  1796  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  1797  06C4  1306               	bcf	6,6	;volatile
  1798  06C5                     u1724:	
  1799  06C5  1F06               	btfss	6,6	;volatile
  1800  06C6  2ECB               	goto	u1720
  1801  06C7  1683               	bsf	3,5	;RP0=1, select bank1
  1802  06C8  1303               	bcf	3,6	;RP1=0, select bank1
  1803  06C9  1686               	bsf	6,5	;volatile
  1804  06CA  2ECE               	goto	u1734
  1805  06CB                     u1720:	
  1806  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  1807  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  1808  06CD  1286               	bcf	6,5	;volatile
  1809  06CE                     u1734:	
  1810  06CE  1E86               	btfss	6,5	;volatile
  1811  06CF  2ED4               	goto	u1730
  1812  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  1813  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  1814  06D2  1606               	bsf	6,4	;volatile
  1815  06D3  0008               	return
  1816  06D4                     u1730:	
  1817  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  1818  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  1819  06D6  1206               	bcf	6,4	;volatile
  1820  06D7  0008               	return
  1821  06D8                     __end_of_InitKeyPad:	
  1822                           
  1823                           	psect	text4
  1824  002A                     __ptext4:	
  1825 ;; *************** function _ISR *****************
  1826 ;; Defined at:
  1827 ;;		line 287 in file "main.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 300/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0
  1843 ;;      Temps:          0       6       0       0       0
  1844 ;;      Totals:         0       6       0       0       0
  1845 ;;Total ram usage:        6 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    2
  1848 ;; This function calls:
  1849 ;;		___aldiv
  1850 ;;		___almod
  1851 ;;		___altoft
  1852 ;;		___ftmul
  1853 ;;		___fttol
  1854 ;;		_display
  1855 ;; This function is called by:
  1856 ;;		Interrupt level 1
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _ISR
  1862  002A                     _ISR:	
  1863                           
  1864                           ;main.c: 290: if (PIR1bits.RCIF == 1 && pos < 28)
  1865  002A  1E8C               	btfss	12,5	;volatile
  1866  002B  2838               	goto	i1l1858
  1867  002C  301C               	movlw	28
  1868  002D  024E               	subwf	_pos,w
  1869  002E  1803               	skipnc
  1870  002F  2838               	goto	i1l1858
  1871                           
  1872                           ;main.c: 291: {
  1873                           ;main.c: 292: StringReceive[pos] = RCREG;
  1874  0030  084E               	movf	_pos,w
  1875  0031  3EA0               	addlw	(low (_StringReceive| 0))& (0+255)
  1876  0032  0084               	movwf	4
  1877  0033  081A               	movf	26,w	;volatile
  1878  0034  1383               	bcf	3,7	;select IRP bank1
  1879  0035  0080               	movwf	0
  1880                           
  1881                           ;main.c: 293: pos++;
  1882  0036  0ACE               	incf	_pos,f
  1883                           
  1884                           ;main.c: 294: RCIF = 0;
  1885  0037  128C               	bcf	12,5	;volatile
  1886  0038                     i1l1858:	
  1887                           
  1888                           ;main.c: 295: }
  1889                           ;main.c: 327: if (INTCONbits.TMR0IF == 1)
  1890  0038  1D0B               	btfss	11,2	;volatile
  1891  0039  28CF               	goto	i1l148
  1892                           
  1893                           ;main.c: 328: {
  1894                           ;main.c: 329: cout++;
  1895  003A  0AC8               	incf	_cout,f
  1896  003B  1903               	skipnz
  1897  003C  0AC9               	incf	_cout+1,f
  1898                           
  1899                           ;main.c: 330: if (cout == 20)
  1900  003D  3014               	movlw	20
  1901  003E  0648               	xorwf	_cout,w
  1902  003F  0449               	iorwf	_cout+1,w
  1903  0040  1D03               	btfss	3,2
  1904  0041  28AF               	goto	i1l1886
  1905                           
  1906                           ;main.c: 331: {
  1907                           ;main.c: 332: cout = 0;
  1908  0042  01C8               	clrf	_cout
  1909  0043  01C9               	clrf	_cout+1
  1910                           
  1911                           ;main.c: 349: if (ADCON0bits.GO_nDONE == 0)
  1912  0044  189F               	btfsc	31,1	;volatile
  1913  0045  28AF               	goto	i1l1886
  1914                           
  1915                           ;main.c: 350: {
  1916                           ;main.c: 352: adc_lm35 = (ADRESH << 8) + ADRESL;
  1917  0046  081E               	movf	30,w	;volatile
  1918  0047  00BC               	movwf	??_ISR
  1919  0048  01BD               	clrf	??_ISR+1
  1920  0049  00BD               	movwf	??_ISR+1
  1921  004A  01BC               	clrf	??_ISR
  1922  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1923  004C  081E               	movf	30,w	;volatile
  1924  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1925  004E  073C               	addwf	??_ISR,w
  1926  004F  00C2               	movwf	_adc_lm35
  1927  0050  3000               	movlw	0
  1928  0051  1803               	skipnc
  1929  0052  3001               	movlw	1
  1930  0053  073D               	addwf	??_ISR+1,w
  1931  0054  00C3               	movwf	_adc_lm35+1
  1932  0055  01C4               	clrf	_adc_lm35+2
  1933  0056  1BC3               	btfsc	_adc_lm35+1,7
  1934  0057  03C4               	decf	_adc_lm35+2,f
  1935  0058  0844               	movf	_adc_lm35+2,w
  1936  0059  00C5               	movwf	_adc_lm35+3
  1937                           
  1938                           ;main.c: 353: adc_lm35 = (int) (adc_lm35 * 0.49);
  1939  005A  00FB               	movwf	___altoft@c+3
  1940  005B  0844               	movf	_adc_lm35+2,w
  1941  005C  00FA               	movwf	___altoft@c+2
  1942  005D  0843               	movf	_adc_lm35+1,w
  1943  005E  00F9               	movwf	___altoft@c+1
  1944  005F  0842               	movf	_adc_lm35,w
  1945  0060  00F8               	movwf	___altoft@c
  1946  0061  21B8  120A  118A   	fcall	___altoft
  1947  0064  0878               	movf	?___altoft,w
  1948  0065  00A3               	movwf	___ftmul@f2
  1949  0066  0879               	movf	?___altoft+1,w
  1950  0067  00A4               	movwf	___ftmul@f2+1
  1951  0068  087A               	movf	?___altoft+2,w
  1952  0069  00A5               	movwf	___ftmul@f2+2
  1953  006A  30E1               	movlw	225
  1954  006B  00A0               	movwf	___ftmul@f1
  1955  006C  30FA               	movlw	250
  1956  006D  00A1               	movwf	___ftmul@f1+1
  1957  006E  303E               	movlw	62
  1958  006F  00A2               	movwf	___ftmul@f1+2
  1959  0070  21E7  120A  118A   	fcall	___ftmul
  1960  0073  0820               	movf	?___ftmul,w
  1961  0074  00AF               	movwf	___fttol@f1
  1962  0075  0821               	movf	?___ftmul+1,w
  1963  0076  00B0               	movwf	___fttol@f1+1
  1964  0077  0822               	movf	?___ftmul+2,w
  1965  0078  00B1               	movwf	___fttol@f1+2
  1966  0079  2296  120A  118A   	fcall	___fttol
  1967  007C  082F               	movf	?___fttol,w
  1968  007D  00C2               	movwf	_adc_lm35
  1969  007E  0830               	movf	?___fttol+1,w
  1970  007F  00C3               	movwf	_adc_lm35+1
  1971  0080  3000               	movlw	0
  1972  0081  1BC3               	btfsc	_adc_lm35+1,7
  1973  0082  30FF               	movlw	255
  1974  0083  00C4               	movwf	_adc_lm35+2
  1975  0084  00C5               	movwf	_adc_lm35+3
  1976                           
  1977                           ;main.c: 354: Adc_lm35String[0] = ' ';
  1978  0085  3020               	movlw	32
  1979  0086  00D5               	movwf	_Adc_lm35String
  1980                           
  1981                           ;main.c: 355: Adc_lm35String[1] = ' ';
  1982  0087  00D6               	movwf	_Adc_lm35String+1
  1983                           
  1984                           ;main.c: 356: Adc_lm35String[2] = (adc_lm35 / 10) + 48;
  1985  0088  300A               	movlw	10
  1986  0089  00F0               	movwf	___aldiv@divisor
  1987  008A  01F1               	clrf	___aldiv@divisor+1
  1988  008B  01F2               	clrf	___aldiv@divisor+2
  1989  008C  01F3               	clrf	___aldiv@divisor+3
  1990  008D  0845               	movf	_adc_lm35+3,w
  1991  008E  00F7               	movwf	___aldiv@dividend+3
  1992  008F  0844               	movf	_adc_lm35+2,w
  1993  0090  00F6               	movwf	___aldiv@dividend+2
  1994  0091  0843               	movf	_adc_lm35+1,w
  1995  0092  00F5               	movwf	___aldiv@dividend+1
  1996  0093  0842               	movf	_adc_lm35,w
  1997  0094  00F4               	movwf	___aldiv@dividend
  1998  0095  20DA  120A  118A   	fcall	___aldiv
  1999  0098  0870               	movf	?___aldiv,w
  2000  0099  3E30               	addlw	48
  2001  009A  00D7               	movwf	_Adc_lm35String+2
  2002                           
  2003                           ;main.c: 357: Adc_lm35String[3] = (adc_lm35 % 10) + 48;
  2004  009B  300A               	movlw	10
  2005  009C  00F0               	movwf	___almod@divisor
  2006  009D  01F1               	clrf	___almod@divisor+1
  2007  009E  01F2               	clrf	___almod@divisor+2
  2008  009F  01F3               	clrf	___almod@divisor+3
  2009  00A0  0845               	movf	_adc_lm35+3,w
  2010  00A1  00F7               	movwf	___almod@dividend+3
  2011  00A2  0844               	movf	_adc_lm35+2,w
  2012  00A3  00F6               	movwf	___almod@dividend+2
  2013  00A4  0843               	movf	_adc_lm35+1,w
  2014  00A5  00F5               	movwf	___almod@dividend+1
  2015  00A6  0842               	movf	_adc_lm35,w
  2016  00A7  00F4               	movwf	___almod@dividend
  2017  00A8  214F               	fcall	___almod
  2018  00A9  0870               	movf	?___almod,w
  2019  00AA  3E30               	addlw	48
  2020  00AB  00D8               	movwf	_Adc_lm35String+3
  2021                           
  2022                           ;main.c: 358: Adc_lm35String[4] = '\0';
  2023  00AC  01D9               	clrf	_Adc_lm35String+4
  2024                           
  2025                           ;main.c: 359: PIR1bits.ADIF = 0;
  2026  00AD  130C               	bcf	12,6	;volatile
  2027                           
  2028                           ;main.c: 360: ADCON0bits.GO_nDONE = 1;
  2029  00AE  149F               	bsf	31,1	;volatile
  2030  00AF                     i1l1886:	
  2031                           
  2032                           ;main.c: 361: }
  2033                           ;main.c: 373: }
  2034                           ;main.c: 377: display(Adc_lm35String);
  2035  00AF  3055               	movlw	(low (_Adc_lm35String| 0))& (0+255)
  2036  00B0  120A  158A  25FA  120A  118A  	fcall	_display
  2037                           
  2038                           ;main.c: 378: CountNext++;
  2039  00B5  0AC6               	incf	_CountNext,f
  2040  00B6  1903               	skipnz
  2041  00B7  0AC7               	incf	_CountNext+1,f
  2042                           
  2043                           ;main.c: 379: if (CountNext == 2)
  2044  00B8  3002               	movlw	2
  2045  00B9  0646               	xorwf	_CountNext,w
  2046  00BA  0447               	iorwf	_CountNext+1,w
  2047  00BB  1D03               	btfss	3,2
  2048  00BC  28CC               	goto	i1l1900
  2049                           
  2050                           ;main.c: 380: {
  2051                           ;main.c: 381: CountNext = 0;
  2052  00BD  01C6               	clrf	_CountNext
  2053  00BE  01C7               	clrf	_CountNext+1
  2054                           
  2055                           ;main.c: 382: next++;
  2056  00BF  0ACC               	incf	_next,f
  2057  00C0  1903               	skipnz
  2058  00C1  0ACD               	incf	_next+1,f
  2059                           
  2060                           ;main.c: 383: if (next == LenghString)
  2061  00C2  084B               	movf	_LenghString+1,w
  2062  00C3  064D               	xorwf	_next+1,w
  2063  00C4  1D03               	skipz
  2064  00C5  28C8               	goto	u170_25
  2065  00C6  084A               	movf	_LenghString,w
  2066  00C7  064C               	xorwf	_next,w
  2067  00C8                     u170_25:	
  2068  00C8  1D03               	skipz
  2069  00C9  28CC               	goto	i1l1900
  2070                           
  2071                           ;main.c: 384: next = 0;
  2072  00CA  01CC               	clrf	_next
  2073  00CB  01CD               	clrf	_next+1
  2074  00CC                     i1l1900:	
  2075                           
  2076                           ;main.c: 385: }
  2077                           ;main.c: 386: TMR0 = 56;
  2078  00CC  3038               	movlw	56
  2079  00CD  0081               	movwf	1	;volatile
  2080                           
  2081                           ;main.c: 387: INTCONbits.TMR0IF = 0;
  2082  00CE  110B               	bcf	11,2	;volatile
  2083  00CF                     i1l148:	
  2084  00CF  0841               	movf	??_ISR+5,w
  2085  00D0  00FF               	movwf	127
  2086  00D1  0840               	movf	??_ISR+4,w
  2087  00D2  008A               	movwf	10
  2088  00D3  083F               	movf	??_ISR+3,w
  2089  00D4  0084               	movwf	4
  2090  00D5  0E3E               	swapf	(??_ISR+2)^0,w
  2091  00D6  0083               	movwf	3
  2092  00D7  0EFE               	swapf	126,f
  2093  00D8  0E7E               	swapf	126,w
  2094  00D9  0009               	retfie
  2095  00DA                     __end_of_ISR:	
  2096  00DA                     __ptext18:	
  2097 ;; *************** function ___aldiv *****************
  2098 ;; Defined at:
  2099 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  divisor         4    0[COMMON] long 
  2102 ;;  dividend        4    4[COMMON] long 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  quotient        4   10[COMMON] long 
  2105 ;;  sign            1    9[COMMON] unsigned char 
  2106 ;;  counter         1    8[COMMON] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  4    0[COMMON] long 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 300/0
  2113 ;;		On exit  : 300/0
  2114 ;;		Unchanged: 300/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         8       0       0       0       0
  2117 ;;      Locals:         6       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0
  2119 ;;      Totals:        14       0       0       0       0
  2120 ;;Total ram usage:       14 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_ISR
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function ___aldiv
  2131  00DA                     ___aldiv:	
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2135  00DA  01F9               	clrf	___aldiv@sign
  2136  00DB  1FF3               	btfss	___aldiv@divisor+3,7
  2137  00DC  28EA               	goto	i1l493
  2138  00DD  09F0               	comf	___aldiv@divisor,f
  2139  00DE  09F1               	comf	___aldiv@divisor+1,f
  2140  00DF  09F2               	comf	___aldiv@divisor+2,f
  2141  00E0  09F3               	comf	___aldiv@divisor+3,f
  2142  00E1  0AF0               	incf	___aldiv@divisor,f
  2143  00E2  1903               	skipnz
  2144  00E3  0AF1               	incf	___aldiv@divisor+1,f
  2145  00E4  1903               	skipnz
  2146  00E5  0AF2               	incf	___aldiv@divisor+2,f
  2147  00E6  1903               	skipnz
  2148  00E7  0AF3               	incf	___aldiv@divisor+3,f
  2149  00E8  01F9               	clrf	___aldiv@sign
  2150  00E9  0AF9               	incf	___aldiv@sign,f
  2151  00EA                     i1l493:	
  2152  00EA  1FF7               	btfss	___aldiv@dividend+3,7
  2153  00EB  28F9               	goto	i1l1604
  2154  00EC  09F4               	comf	___aldiv@dividend,f
  2155  00ED  09F5               	comf	___aldiv@dividend+1,f
  2156  00EE  09F6               	comf	___aldiv@dividend+2,f
  2157  00EF  09F7               	comf	___aldiv@dividend+3,f
  2158  00F0  0AF4               	incf	___aldiv@dividend,f
  2159  00F1  1903               	skipnz
  2160  00F2  0AF5               	incf	___aldiv@dividend+1,f
  2161  00F3  1903               	skipnz
  2162  00F4  0AF6               	incf	___aldiv@dividend+2,f
  2163  00F5  1903               	skipnz
  2164  00F6  0AF7               	incf	___aldiv@dividend+3,f
  2165  00F7  3001               	movlw	1
  2166  00F8  06F9               	xorwf	___aldiv@sign,f
  2167  00F9                     i1l1604:	
  2168  00F9  01FA               	clrf	___aldiv@quotient
  2169  00FA  01FB               	clrf	___aldiv@quotient+1
  2170  00FB  01FC               	clrf	___aldiv@quotient+2
  2171  00FC  01FD               	clrf	___aldiv@quotient+3
  2172  00FD  0873               	movf	___aldiv@divisor+3,w
  2173  00FE  0472               	iorwf	___aldiv@divisor+2,w
  2174  00FF  0471               	iorwf	___aldiv@divisor+1,w
  2175  0100  0470               	iorwf	___aldiv@divisor,w
  2176  0101  1903               	skipnz
  2177  0102  2938               	goto	i1l1626
  2178  0103  01F8               	clrf	___aldiv@counter
  2179  0104                     L9:	
  2180  0104  0AF8               	incf	___aldiv@counter,f
  2181  0105  1BF3               	btfsc	___aldiv@divisor+3,7
  2182  0106  290D               	goto	i1l1614
  2183  0107  1003               	clrc
  2184  0108  0DF0               	rlf	___aldiv@divisor,f
  2185  0109  0DF1               	rlf	___aldiv@divisor+1,f
  2186  010A  0DF2               	rlf	___aldiv@divisor+2,f
  2187  010B  0DF3               	rlf	___aldiv@divisor+3,f
  2188  010C  2904               	goto	L9
  2189  010D                     i1l1614:	
  2190  010D  1003               	clrc
  2191  010E  0DFA               	rlf	___aldiv@quotient,f
  2192  010F  0DFB               	rlf	___aldiv@quotient+1,f
  2193  0110  0DFC               	rlf	___aldiv@quotient+2,f
  2194  0111  0DFD               	rlf	___aldiv@quotient+3,f
  2195  0112  0873               	movf	___aldiv@divisor+3,w
  2196  0113  0277               	subwf	___aldiv@dividend+3,w
  2197  0114  1D03               	skipz
  2198  0115  2920               	goto	u132_25
  2199  0116  0872               	movf	___aldiv@divisor+2,w
  2200  0117  0276               	subwf	___aldiv@dividend+2,w
  2201  0118  1D03               	skipz
  2202  0119  2920               	goto	u132_25
  2203  011A  0871               	movf	___aldiv@divisor+1,w
  2204  011B  0275               	subwf	___aldiv@dividend+1,w
  2205  011C  1D03               	skipz
  2206  011D  2920               	goto	u132_25
  2207  011E  0870               	movf	___aldiv@divisor,w
  2208  011F  0274               	subwf	___aldiv@dividend,w
  2209  0120                     u132_25:	
  2210  0120  1C03               	skipc
  2211  0121  2932               	goto	L10
  2212  0122  0870               	movf	___aldiv@divisor,w
  2213  0123  02F4               	subwf	___aldiv@dividend,f
  2214  0124  0871               	movf	___aldiv@divisor+1,w
  2215  0125  1C03               	skipc
  2216  0126  0F71               	incfsz	___aldiv@divisor+1,w
  2217  0127  02F5               	subwf	___aldiv@dividend+1,f
  2218  0128  0872               	movf	___aldiv@divisor+2,w
  2219  0129  1C03               	skipc
  2220  012A  0F72               	incfsz	___aldiv@divisor+2,w
  2221  012B  02F6               	subwf	___aldiv@dividend+2,f
  2222  012C  0873               	movf	___aldiv@divisor+3,w
  2223  012D  1C03               	skipc
  2224  012E  0F73               	incfsz	___aldiv@divisor+3,w
  2225  012F  02F7               	subwf	___aldiv@dividend+3,f
  2226  0130  147A               	bsf	___aldiv@quotient,0
  2227  0131  1003               	clrc
  2228  0132                     L10:	
  2229  0132  0CF3               	rrf	___aldiv@divisor+3,f
  2230  0133  0CF2               	rrf	___aldiv@divisor+2,f
  2231  0134  0CF1               	rrf	___aldiv@divisor+1,f
  2232  0135  0CF0               	rrf	___aldiv@divisor,f
  2233  0136  0BF8               	decfsz	___aldiv@counter,f
  2234  0137  290D               	goto	i1l1614
  2235  0138                     i1l1626:	
  2236  0138  0879               	movf	___aldiv@sign,w
  2237  0139  1903               	btfsc	3,2
  2238  013A  2946               	goto	i1l1630
  2239  013B  09FA               	comf	___aldiv@quotient,f
  2240  013C  09FB               	comf	___aldiv@quotient+1,f
  2241  013D  09FC               	comf	___aldiv@quotient+2,f
  2242  013E  09FD               	comf	___aldiv@quotient+3,f
  2243  013F  0AFA               	incf	___aldiv@quotient,f
  2244  0140  1903               	skipnz
  2245  0141  0AFB               	incf	___aldiv@quotient+1,f
  2246  0142  1903               	skipnz
  2247  0143  0AFC               	incf	___aldiv@quotient+2,f
  2248  0144  1903               	skipnz
  2249  0145  0AFD               	incf	___aldiv@quotient+3,f
  2250  0146                     i1l1630:	
  2251  0146  087D               	movf	___aldiv@quotient+3,w
  2252  0147  00F3               	movwf	?___aldiv+3
  2253  0148  087C               	movf	___aldiv@quotient+2,w
  2254  0149  00F2               	movwf	?___aldiv+2
  2255  014A  087B               	movf	___aldiv@quotient+1,w
  2256  014B  00F1               	movwf	?___aldiv+1
  2257  014C  087A               	movf	___aldiv@quotient,w
  2258  014D  00F0               	movwf	?___aldiv
  2259  014E  0008               	return
  2260  014F                     __end_of___aldiv:	
  2261  007E                     btemp	set	126	;btemp
  2262  007E                     wtemp0	set	126
  2263  014F                     __ptext17:	
  2264 ;; *************** function ___almod *****************
  2265 ;; Defined at:
  2266 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\almod.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  divisor         4    0[COMMON] long 
  2269 ;;  dividend        4    4[COMMON] long 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  sign            1    9[COMMON] unsigned char 
  2272 ;;  counter         1    8[COMMON] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  4    0[COMMON] long 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0
  2277 ;; Tracked objects:
  2278 ;;		On entry : 300/0
  2279 ;;		On exit  : 300/0
  2280 ;;		Unchanged: 300/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         8       0       0       0       0
  2283 ;;      Locals:         2       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0
  2285 ;;      Totals:        10       0       0       0       0
  2286 ;;Total ram usage:       10 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_ISR
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function ___almod
  2297  014F                     ___almod:	
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2301  014F  01F9               	clrf	___almod@sign
  2302  0150  1FF7               	btfss	___almod@dividend+3,7
  2303  0151  295F               	goto	i1l506
  2304  0152  09F4               	comf	___almod@dividend,f
  2305  0153  09F5               	comf	___almod@dividend+1,f
  2306  0154  09F6               	comf	___almod@dividend+2,f
  2307  0155  09F7               	comf	___almod@dividend+3,f
  2308  0156  0AF4               	incf	___almod@dividend,f
  2309  0157  1903               	skipnz
  2310  0158  0AF5               	incf	___almod@dividend+1,f
  2311  0159  1903               	skipnz
  2312  015A  0AF6               	incf	___almod@dividend+2,f
  2313  015B  1903               	skipnz
  2314  015C  0AF7               	incf	___almod@dividend+3,f
  2315  015D  01F9               	clrf	___almod@sign
  2316  015E  0AF9               	incf	___almod@sign,f
  2317  015F                     i1l506:	
  2318  015F  1FF3               	btfss	___almod@divisor+3,7
  2319  0160  296C               	goto	i1l1642
  2320  0161  09F0               	comf	___almod@divisor,f
  2321  0162  09F1               	comf	___almod@divisor+1,f
  2322  0163  09F2               	comf	___almod@divisor+2,f
  2323  0164  09F3               	comf	___almod@divisor+3,f
  2324  0165  0AF0               	incf	___almod@divisor,f
  2325  0166  1903               	skipnz
  2326  0167  0AF1               	incf	___almod@divisor+1,f
  2327  0168  1903               	skipnz
  2328  0169  0AF2               	incf	___almod@divisor+2,f
  2329  016A  1903               	skipnz
  2330  016B  0AF3               	incf	___almod@divisor+3,f
  2331  016C                     i1l1642:	
  2332  016C  0873               	movf	___almod@divisor+3,w
  2333  016D  0472               	iorwf	___almod@divisor+2,w
  2334  016E  0471               	iorwf	___almod@divisor+1,w
  2335  016F  0470               	iorwf	___almod@divisor,w
  2336  0170  1903               	skipnz
  2337  0171  29A1               	goto	i1l1658
  2338  0172  01F8               	clrf	___almod@counter
  2339  0173                     L7:	
  2340  0173  0AF8               	incf	___almod@counter,f
  2341  0174  1BF3               	btfsc	___almod@divisor+3,7
  2342  0175  297C               	goto	i1l1650
  2343  0176  1003               	clrc
  2344  0177  0DF0               	rlf	___almod@divisor,f
  2345  0178  0DF1               	rlf	___almod@divisor+1,f
  2346  0179  0DF2               	rlf	___almod@divisor+2,f
  2347  017A  0DF3               	rlf	___almod@divisor+3,f
  2348  017B  2973               	goto	L7
  2349  017C                     i1l1650:	
  2350  017C  0873               	movf	___almod@divisor+3,w
  2351  017D  0277               	subwf	___almod@dividend+3,w
  2352  017E  1D03               	skipz
  2353  017F  298A               	goto	u139_25
  2354  0180  0872               	movf	___almod@divisor+2,w
  2355  0181  0276               	subwf	___almod@dividend+2,w
  2356  0182  1D03               	skipz
  2357  0183  298A               	goto	u139_25
  2358  0184  0871               	movf	___almod@divisor+1,w
  2359  0185  0275               	subwf	___almod@dividend+1,w
  2360  0186  1D03               	skipz
  2361  0187  298A               	goto	u139_25
  2362  0188  0870               	movf	___almod@divisor,w
  2363  0189  0274               	subwf	___almod@dividend,w
  2364  018A                     u139_25:	
  2365  018A  1C03               	skipc
  2366  018B  299B               	goto	L8
  2367  018C  0870               	movf	___almod@divisor,w
  2368  018D  02F4               	subwf	___almod@dividend,f
  2369  018E  0871               	movf	___almod@divisor+1,w
  2370  018F  1C03               	skipc
  2371  0190  0F71               	incfsz	___almod@divisor+1,w
  2372  0191  02F5               	subwf	___almod@dividend+1,f
  2373  0192  0872               	movf	___almod@divisor+2,w
  2374  0193  1C03               	skipc
  2375  0194  0F72               	incfsz	___almod@divisor+2,w
  2376  0195  02F6               	subwf	___almod@dividend+2,f
  2377  0196  0873               	movf	___almod@divisor+3,w
  2378  0197  1C03               	skipc
  2379  0198  0F73               	incfsz	___almod@divisor+3,w
  2380  0199  02F7               	subwf	___almod@dividend+3,f
  2381  019A  1003               	clrc
  2382  019B                     L8:	
  2383  019B  0CF3               	rrf	___almod@divisor+3,f
  2384  019C  0CF2               	rrf	___almod@divisor+2,f
  2385  019D  0CF1               	rrf	___almod@divisor+1,f
  2386  019E  0CF0               	rrf	___almod@divisor,f
  2387  019F  0BF8               	decfsz	___almod@counter,f
  2388  01A0  297C               	goto	i1l1650
  2389  01A1                     i1l1658:	
  2390  01A1  0879               	movf	___almod@sign,w
  2391  01A2  1903               	btfsc	3,2
  2392  01A3  29AF               	goto	i1l1662
  2393  01A4  09F4               	comf	___almod@dividend,f
  2394  01A5  09F5               	comf	___almod@dividend+1,f
  2395  01A6  09F6               	comf	___almod@dividend+2,f
  2396  01A7  09F7               	comf	___almod@dividend+3,f
  2397  01A8  0AF4               	incf	___almod@dividend,f
  2398  01A9  1903               	skipnz
  2399  01AA  0AF5               	incf	___almod@dividend+1,f
  2400  01AB  1903               	skipnz
  2401  01AC  0AF6               	incf	___almod@dividend+2,f
  2402  01AD  1903               	skipnz
  2403  01AE  0AF7               	incf	___almod@dividend+3,f
  2404  01AF                     i1l1662:	
  2405  01AF  0877               	movf	___almod@dividend+3,w
  2406  01B0  00F3               	movwf	?___almod+3
  2407  01B1  0876               	movf	___almod@dividend+2,w
  2408  01B2  00F2               	movwf	?___almod+2
  2409  01B3  0875               	movf	___almod@dividend+1,w
  2410  01B4  00F1               	movwf	?___almod+1
  2411  01B5  0874               	movf	___almod@dividend,w
  2412  01B6  00F0               	movwf	?___almod
  2413  01B7  0008               	return
  2414  01B8                     __end_of___almod:	
  2415  01B8                     __ptext15:	
  2416 ;; *************** function ___altoft *****************
  2417 ;; Defined at:
  2418 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  c               4    8[COMMON] long 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  sign            1   13[COMMON] unsigned char 
  2423 ;;  exp             1   12[COMMON] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  3    8[COMMON] float 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 300/0
  2430 ;;		On exit  : 300/0
  2431 ;;		Unchanged: 300/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         4       0       0       0       0
  2434 ;;      Locals:         2       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0
  2436 ;;      Totals:         6       0       0       0       0
  2437 ;;Total ram usage:        6 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    1
  2440 ;; This function calls:
  2441 ;;		___ftpack
  2442 ;; This function is called by:
  2443 ;;		_ISR
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function ___altoft
  2449  01B8                     ___altoft:	
  2450  01B8  308E               	movlw	142
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  2454  01B9  01FD               	clrf	___altoft@sign
  2455  01BA  00FC               	movwf	___altoft@exp
  2456  01BB  1FFB               	btfss	___altoft@c+3,7
  2457  01BC  29CA               	goto	i1l1676
  2458  01BD  09F8               	comf	___altoft@c,f
  2459  01BE  09F9               	comf	___altoft@c+1,f
  2460  01BF  09FA               	comf	___altoft@c+2,f
  2461  01C0  09FB               	comf	___altoft@c+3,f
  2462  01C1  0AF8               	incf	___altoft@c,f
  2463  01C2  1903               	skipnz
  2464  01C3  0AF9               	incf	___altoft@c+1,f
  2465  01C4  1903               	skipnz
  2466  01C5  0AFA               	incf	___altoft@c+2,f
  2467  01C6  1903               	skipnz
  2468  01C7  0AFB               	incf	___altoft@c+3,f
  2469  01C8  01FD               	clrf	___altoft@sign
  2470  01C9  0AFD               	incf	___altoft@sign,f
  2471  01CA                     i1l1676:	
  2472  01CA  30FF               	movlw	255
  2473  01CB  057B               	andwf	___altoft@c+3,w
  2474  01CC  1903               	btfsc	3,2
  2475  01CD  29D5               	goto	i1l1678
  2476  01CE  1003               	clrc
  2477  01CF  0CFB               	rrf	___altoft@c+3,f
  2478  01D0  0CFA               	rrf	___altoft@c+2,f
  2479  01D1  0CF9               	rrf	___altoft@c+1,f
  2480  01D2  0CF8               	rrf	___altoft@c,f
  2481  01D3  0AFC               	incf	___altoft@exp,f
  2482  01D4  29CA               	goto	i1l1676
  2483  01D5                     i1l1678:	
  2484  01D5  0878               	movf	___altoft@c,w
  2485  01D6  00F0               	movwf	___ftpack@arg
  2486  01D7  0879               	movf	___altoft@c+1,w
  2487  01D8  00F1               	movwf	___ftpack@arg+1
  2488  01D9  087A               	movf	___altoft@c+2,w
  2489  01DA  00F2               	movwf	___ftpack@arg+2
  2490  01DB  087C               	movf	___altoft@exp,w
  2491  01DC  00F3               	movwf	___ftpack@exp
  2492  01DD  087D               	movf	___altoft@sign,w
  2493  01DE  00F4               	movwf	___ftpack@sign
  2494  01DF  2254               	fcall	___ftpack
  2495  01E0  0870               	movf	?___ftpack,w
  2496  01E1  00F8               	movwf	?___altoft
  2497  01E2  0871               	movf	?___ftpack+1,w
  2498  01E3  00F9               	movwf	?___altoft+1
  2499  01E4  0872               	movf	?___ftpack+2,w
  2500  01E5  00FA               	movwf	?___altoft+2
  2501  01E6  0008               	return
  2502  01E7                     __end_of___altoft:	
  2503  01E7                     __ptext14:	
  2504 ;; *************** function ___ftmul *****************
  2505 ;; Defined at:
  2506 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  f1              3    0[BANK0 ] float 
  2509 ;;  f2              3    3[BANK0 ] float 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  f3_as_produc    3   10[BANK0 ] unsigned um
  2512 ;;  sign            1   14[BANK0 ] unsigned char 
  2513 ;;  cntr            1   13[BANK0 ] unsigned char 
  2514 ;;  exp             1    9[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  3    0[BANK0 ] float 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 300/0
  2521 ;;		On exit  : 300/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       6       0       0       0
  2525 ;;      Locals:         0       6       0       0       0
  2526 ;;      Temps:          0       3       0       0       0
  2527 ;;      Totals:         0      15       0       0       0
  2528 ;;Total ram usage:       15 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    1
  2531 ;; This function calls:
  2532 ;;		___ftpack
  2533 ;; This function is called by:
  2534 ;;		_ISR
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function ___ftmul
  2540  01E7                     ___ftmul:	
  2541                           
  2542                           ;incstack = 0
  2543                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2544  01E7  0820               	movf	___ftmul@f1,w
  2545  01E8  00A6               	movwf	??___ftmul
  2546  01E9  0821               	movf	___ftmul@f1+1,w
  2547  01EA  00A7               	movwf	??___ftmul+1
  2548  01EB  0822               	movf	___ftmul@f1+2,w
  2549  01EC  00A8               	movwf	??___ftmul+2
  2550  01ED  1003               	clrc
  2551  01EE  0D27               	rlf	??___ftmul+1,w
  2552  01EF  0D28               	rlf	??___ftmul+2,w
  2553  01F0  00A9               	movwf	___ftmul@exp
  2554  01F1  0829               	movf	___ftmul@exp,w
  2555  01F2  1D03               	btfss	3,2
  2556  01F3  29F8               	goto	i1l1686
  2557  01F4  01A0               	clrf	?___ftmul
  2558  01F5  01A1               	clrf	?___ftmul+1
  2559  01F6  01A2               	clrf	?___ftmul+2
  2560  01F7  0008               	return
  2561  01F8                     i1l1686:	
  2562  01F8  0823               	movf	___ftmul@f2,w
  2563  01F9  00A6               	movwf	??___ftmul
  2564  01FA  0824               	movf	___ftmul@f2+1,w
  2565  01FB  00A7               	movwf	??___ftmul+1
  2566  01FC  0825               	movf	___ftmul@f2+2,w
  2567  01FD  00A8               	movwf	??___ftmul+2
  2568  01FE  1003               	clrc
  2569  01FF  0D27               	rlf	??___ftmul+1,w
  2570  0200  0D28               	rlf	??___ftmul+2,w
  2571  0201  00AE               	movwf	___ftmul@sign
  2572  0202  082E               	movf	___ftmul@sign,w
  2573  0203  1D03               	btfss	3,2
  2574  0204  2A09               	goto	i1l1690
  2575  0205  01A0               	clrf	?___ftmul
  2576  0206  01A1               	clrf	?___ftmul+1
  2577  0207  01A2               	clrf	?___ftmul+2
  2578  0208  0008               	return
  2579  0209                     i1l1690:	
  2580  0209  082E               	movf	___ftmul@sign,w
  2581  020A  3E7B               	addlw	123
  2582  020B  07A9               	addwf	___ftmul@exp,f
  2583  020C  0822               	movf	___ftmul@f1+2,w
  2584  020D  00AE               	movwf	___ftmul@sign
  2585  020E  0825               	movf	___ftmul@f2+2,w
  2586  020F  06AE               	xorwf	___ftmul@sign,f
  2587  0210  3080               	movlw	128
  2588  0211  05AE               	andwf	___ftmul@sign,f
  2589  0212  3007               	movlw	7
  2590  0213  17A1               	bsf	___ftmul@f1+1,7
  2591  0214  17A4               	bsf	___ftmul@f2+1,7
  2592  0215  01A5               	clrf	___ftmul@f2+2
  2593  0216  01AA               	clrf	___ftmul@f3_as_product
  2594  0217  01AB               	clrf	___ftmul@f3_as_product+1
  2595  0218  01AC               	clrf	___ftmul@f3_as_product+2
  2596  0219  00AD               	movwf	___ftmul@cntr
  2597  021A                     i1l1708:	
  2598  021A  1C20               	btfss	___ftmul@f1,0
  2599  021B  2A23               	goto	i1l1712
  2600  021C  22F1  120A  118A   	fcall	PL10	;call to abstracted procedure
  2601  021F  1803               	skipnc
  2602  0220  0A25               	incf	___ftmul@f2+2,w
  2603  0221  1D03               	btfss	3,2
  2604  0222  07AC               	addwf	___ftmul@f3_as_product+2,f
  2605  0223                     i1l1712:	
  2606  0223  1003               	clrc
  2607  0224  0CA2               	rrf	___ftmul@f1+2,f
  2608  0225  0CA1               	rrf	___ftmul@f1+1,f
  2609  0226  0CA0               	rrf	___ftmul@f1,f
  2610  0227  1003               	clrc
  2611  0228  0DA3               	rlf	___ftmul@f2,f
  2612  0229  0DA4               	rlf	___ftmul@f2+1,f
  2613  022A  0DA5               	rlf	___ftmul@f2+2,f
  2614  022B  0BAD               	decfsz	___ftmul@cntr,f
  2615  022C  2A1A               	goto	i1l1708
  2616  022D  3009               	movlw	9
  2617  022E  00AD               	movwf	___ftmul@cntr
  2618  022F                     i1l1720:	
  2619  022F  1C20               	btfss	___ftmul@f1,0
  2620  0230  2A38               	goto	i1l1724
  2621  0231  22F1  120A  118A   	fcall	PL10	;call to abstracted procedure
  2622  0234  1803               	skipnc
  2623  0235  0A25               	incf	___ftmul@f2+2,w
  2624  0236  1D03               	btfss	3,2
  2625  0237  07AC               	addwf	___ftmul@f3_as_product+2,f
  2626  0238                     i1l1724:	
  2627  0238  1003               	clrc
  2628  0239  0CA2               	rrf	___ftmul@f1+2,f
  2629  023A  0CA1               	rrf	___ftmul@f1+1,f
  2630  023B  0CA0               	rrf	___ftmul@f1,f
  2631  023C  1003               	clrc
  2632  023D  0CAC               	rrf	___ftmul@f3_as_product+2,f
  2633  023E  0CAB               	rrf	___ftmul@f3_as_product+1,f
  2634  023F  0CAA               	rrf	___ftmul@f3_as_product,f
  2635  0240  0BAD               	decfsz	___ftmul@cntr,f
  2636  0241  2A2F               	goto	i1l1720
  2637  0242  082A               	movf	___ftmul@f3_as_product,w
  2638  0243  00F0               	movwf	___ftpack@arg
  2639  0244  082B               	movf	___ftmul@f3_as_product+1,w
  2640  0245  00F1               	movwf	___ftpack@arg+1
  2641  0246  082C               	movf	___ftmul@f3_as_product+2,w
  2642  0247  00F2               	movwf	___ftpack@arg+2
  2643  0248  0829               	movf	___ftmul@exp,w
  2644  0249  00F3               	movwf	___ftpack@exp
  2645  024A  082E               	movf	___ftmul@sign,w
  2646  024B  00F4               	movwf	___ftpack@sign
  2647  024C  2254               	fcall	___ftpack
  2648  024D  0870               	movf	?___ftpack,w
  2649  024E  00A0               	movwf	?___ftmul
  2650  024F  0871               	movf	?___ftpack+1,w
  2651  0250  00A1               	movwf	?___ftmul+1
  2652  0251  0872               	movf	?___ftpack+2,w
  2653  0252  00A2               	movwf	?___ftmul+2
  2654  0253  0008               	return
  2655  0254                     __end_of___ftmul:	
  2656  0254                     __ptext16:	
  2657 ;; *************** function ___ftpack *****************
  2658 ;; Defined at:
  2659 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  arg             3    0[COMMON] unsigned um
  2662 ;;  exp             1    3[COMMON] unsigned char 
  2663 ;;  sign            1    4[COMMON] unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  3    0[COMMON] float 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 300/0
  2672 ;;		On exit  : 300/0
  2673 ;;		Unchanged: 300/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         5       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0
  2677 ;;      Temps:          3       0       0       0       0
  2678 ;;      Totals:         8       0       0       0       0
  2679 ;;Total ram usage:        8 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		___altoft
  2685 ;;		___ftmul
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function ___ftpack
  2691  0254                     ___ftpack:	
  2692                           
  2693                           ;incstack = 0
  2694                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2695  0254  0873               	movf	___ftpack@exp,w
  2696  0255  1903               	btfsc	3,2
  2697  0256  2A5C               	goto	i1l594
  2698  0257  0872               	movf	___ftpack@arg+2,w
  2699  0258  0471               	iorwf	___ftpack@arg+1,w
  2700  0259  0470               	iorwf	___ftpack@arg,w
  2701  025A  1D03               	skipz
  2702  025B  2A65               	goto	i1l1438
  2703  025C                     i1l594:	
  2704  025C  01F0               	clrf	?___ftpack
  2705  025D  01F1               	clrf	?___ftpack+1
  2706  025E  01F2               	clrf	?___ftpack+2
  2707  025F  0008               	return
  2708  0260                     i1l1436:	
  2709  0260  0AF3               	incf	___ftpack@exp,f
  2710  0261  1003               	clrc
  2711  0262  0CF2               	rrf	___ftpack@arg+2,f
  2712  0263  0CF1               	rrf	___ftpack@arg+1,f
  2713  0264  0CF0               	rrf	___ftpack@arg,f
  2714  0265                     i1l1438:	
  2715  0265  30FE               	movlw	254
  2716  0266  0572               	andwf	___ftpack@arg+2,w
  2717  0267  1903               	btfsc	3,2
  2718  0268  2A74               	goto	i1l1442
  2719  0269  2A60               	goto	i1l1436
  2720  026A                     i1l1440:	
  2721  026A  0AF3               	incf	___ftpack@exp,f
  2722  026B  0AF0               	incf	___ftpack@arg,f
  2723  026C  1903               	skipnz
  2724  026D  0AF1               	incf	___ftpack@arg+1,f
  2725  026E  1903               	skipnz
  2726  026F  0AF2               	incf	___ftpack@arg+2,f
  2727  0270  1003               	clrc
  2728  0271  0CF2               	rrf	___ftpack@arg+2,f
  2729  0272  0CF1               	rrf	___ftpack@arg+1,f
  2730  0273  0CF0               	rrf	___ftpack@arg,f
  2731  0274                     i1l1442:	
  2732  0274  30FF               	movlw	255
  2733  0275  0572               	andwf	___ftpack@arg+2,w
  2734  0276  1903               	btfsc	3,2
  2735  0277  2A82               	goto	i1l1446
  2736  0278  2A6A               	goto	i1l1440
  2737  0279                     i1l1448:	
  2738  0279  3002               	movlw	2
  2739  027A  0273               	subwf	___ftpack@exp,w
  2740  027B  1C03               	btfss	3,0
  2741  027C  2A84               	goto	i1l606
  2742  027D  03F3               	decf	___ftpack@exp,f
  2743  027E  1003               	clrc
  2744  027F  0DF0               	rlf	___ftpack@arg,f
  2745  0280  0DF1               	rlf	___ftpack@arg+1,f
  2746  0281  0DF2               	rlf	___ftpack@arg+2,f
  2747  0282                     i1l1446:	
  2748  0282  1FF1               	btfss	___ftpack@arg+1,7
  2749  0283  2A79               	goto	i1l1448
  2750  0284                     i1l606:	
  2751  0284  1C73               	btfss	___ftpack@exp,0
  2752  0285  13F1               	bcf	___ftpack@arg+1,7
  2753  0286  1003               	clrc
  2754  0287  0CF3               	rrf	___ftpack@exp,f
  2755  0288  0873               	movf	___ftpack@exp,w
  2756  0289  00F7               	movwf	??___ftpack+2
  2757  028A  01F6               	clrf	??___ftpack+1
  2758  028B  01F5               	clrf	??___ftpack
  2759  028C  0875               	movf	??___ftpack,w
  2760  028D  04F0               	iorwf	___ftpack@arg,f
  2761  028E  0876               	movf	??___ftpack+1,w
  2762  028F  04F1               	iorwf	___ftpack@arg+1,f
  2763  0290  0877               	movf	??___ftpack+2,w
  2764  0291  04F2               	iorwf	___ftpack@arg+2,f
  2765  0292  0874               	movf	___ftpack@sign,w
  2766  0293  1D03               	btfss	3,2
  2767  0294  17F2               	bsf	___ftpack@arg+2,7
  2768  0295  0008               	return
  2769  0296                     __end_of___ftpack:	
  2770  0296                     __ptext13:	
  2771 ;; *************** function ___fttol *****************
  2772 ;; Defined at:
  2773 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  f1              3   15[BANK0 ] float 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  lval            4   23[BANK0 ] unsigned long 
  2778 ;;  exp1            1   27[BANK0 ] unsigned char 
  2779 ;;  sign1           1   22[BANK0 ] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  4   15[BANK0 ] long 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 300/0
  2786 ;;		On exit  : 300/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         0       4       0       0       0
  2790 ;;      Locals:         0       6       0       0       0
  2791 ;;      Temps:          0       3       0       0       0
  2792 ;;      Totals:         0      13       0       0       0
  2793 ;;Total ram usage:       13 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_ISR
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function ___fttol
  2804  0296                     ___fttol:	
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2808  0296  22FC  120A  118A   	fcall	PL14	;call to abstracted procedure
  2809  0299  1003               	clrc
  2810  029A  0D34               	rlf	??___fttol+1,w
  2811  029B  0D35               	rlf	??___fttol+2,w
  2812  029C  00BB               	movwf	___fttol@exp1
  2813  029D  083B               	movf	___fttol@exp1,w
  2814  029E  1D03               	btfss	3,2
  2815  029F  2AA5               	goto	i1l1738
  2816  02A0                     i1l1736:	
  2817  02A0  01AF               	clrf	?___fttol
  2818  02A1  01B0               	clrf	?___fttol+1
  2819  02A2  01B1               	clrf	?___fttol+2
  2820  02A3  01B2               	clrf	?___fttol+3
  2821  02A4  0008               	return
  2822  02A5                     i1l1738:	
  2823  02A5  22FC  120A  118A   	fcall	PL14	;call to abstracted procedure
  2824  02A8  3017               	movlw	23
  2825  02A9                     u153_25:	
  2826  02A9  1003               	clrc
  2827  02AA  0CB5               	rrf	??___fttol+2,f
  2828  02AB  0CB4               	rrf	??___fttol+1,f
  2829  02AC  0CB3               	rrf	??___fttol,f
  2830  02AD  3EFF               	addlw	-1
  2831  02AE  1D03               	skipz
  2832  02AF  2AA9               	goto	u153_25
  2833  02B0  0833               	movf	??___fttol,w
  2834  02B1  00B6               	movwf	___fttol@sign1
  2835  02B2  17B0               	bsf	___fttol@f1+1,7
  2836  02B3  01B1               	clrf	___fttol@f1+2
  2837  02B4  082F               	movf	___fttol@f1,w
  2838  02B5  00B7               	movwf	___fttol@lval
  2839  02B6  0830               	movf	___fttol@f1+1,w
  2840  02B7  00B8               	movwf	___fttol@lval+1
  2841  02B8  0831               	movf	___fttol@f1+2,w
  2842  02B9  00B9               	movwf	___fttol@lval+2
  2843  02BA  308E               	movlw	142
  2844  02BB  01BA               	clrf	___fttol@lval+3
  2845  02BC  02BB               	subwf	___fttol@exp1,f
  2846  02BD  1FBB               	btfss	___fttol@exp1,7
  2847  02BE  2ACC               	goto	i1l1758
  2848  02BF  083B               	movf	___fttol@exp1,w
  2849  02C0  3A80               	xorlw	128
  2850  02C1  3E8F               	addlw	143
  2851  02C2  1C03               	btfss	3,0
  2852  02C3  2AA0               	goto	i1l1736
  2853  02C4                     i1l1754:	
  2854  02C4  1003               	clrc
  2855  02C5  0CBA               	rrf	___fttol@lval+3,f
  2856  02C6  0CB9               	rrf	___fttol@lval+2,f
  2857  02C7  0CB8               	rrf	___fttol@lval+1,f
  2858  02C8  0CB7               	rrf	___fttol@lval,f
  2859  02C9  0FBB               	incfsz	___fttol@exp1,f
  2860  02CA  2AC4               	goto	i1l1754
  2861  02CB  2ADA               	goto	i1l1766
  2862  02CC                     i1l1758:	
  2863  02CC  3018               	movlw	24
  2864  02CD  023B               	subwf	___fttol@exp1,w
  2865  02CE  1803               	btfsc	3,0
  2866  02CF  2AA0               	goto	i1l1736
  2867  02D0                     i1l1764:	
  2868  02D0  083B               	movf	___fttol@exp1,w
  2869  02D1  1903               	btfsc	3,2
  2870  02D2  2ADA               	goto	i1l1766
  2871  02D3  1003               	clrc
  2872  02D4  0DB7               	rlf	___fttol@lval,f
  2873  02D5  0DB8               	rlf	___fttol@lval+1,f
  2874  02D6  0DB9               	rlf	___fttol@lval+2,f
  2875  02D7  0DBA               	rlf	___fttol@lval+3,f
  2876  02D8  03BB               	decf	___fttol@exp1,f
  2877  02D9  2AD0               	goto	i1l1764
  2878  02DA                     i1l1766:	
  2879  02DA  0836               	movf	___fttol@sign1,w
  2880  02DB  1903               	btfsc	3,2
  2881  02DC  2AE8               	goto	i1l1770
  2882  02DD  09B7               	comf	___fttol@lval,f
  2883  02DE  09B8               	comf	___fttol@lval+1,f
  2884  02DF  09B9               	comf	___fttol@lval+2,f
  2885  02E0  09BA               	comf	___fttol@lval+3,f
  2886  02E1  0AB7               	incf	___fttol@lval,f
  2887  02E2  1903               	skipnz
  2888  02E3  0AB8               	incf	___fttol@lval+1,f
  2889  02E4  1903               	skipnz
  2890  02E5  0AB9               	incf	___fttol@lval+2,f
  2891  02E6  1903               	skipnz
  2892  02E7  0ABA               	incf	___fttol@lval+3,f
  2893  02E8                     i1l1770:	
  2894  02E8  083A               	movf	___fttol@lval+3,w
  2895  02E9  00B2               	movwf	?___fttol+3
  2896  02EA  0839               	movf	___fttol@lval+2,w
  2897  02EB  00B1               	movwf	?___fttol+2
  2898  02EC  0838               	movf	___fttol@lval+1,w
  2899  02ED  00B0               	movwf	?___fttol+1
  2900  02EE  0837               	movf	___fttol@lval,w
  2901  02EF  00AF               	movwf	?___fttol
  2902  02F0  0008               	return
  2903  02F1                     __end_of___fttol:	
  2904  02F1                     PL10:	
  2905  02F1  0823               	movf	___ftmul@f2,w
  2906  02F2  07AA               	addwf	___ftmul@f3_as_product,f
  2907  02F3  0824               	movf	___ftmul@f2+1,w
  2908  02F4  1103               	clrz
  2909  02F5  1803               	skipnc
  2910  02F6  0A24               	incf	___ftmul@f2+1,w
  2911  02F7  1D03               	btfss	3,2
  2912  02F8  07AB               	addwf	___ftmul@f3_as_product+1,f
  2913  02F9  0825               	movf	___ftmul@f2+2,w
  2914  02FA  1103               	clrz
  2915  02FB  0008               	return
  2916  02FC                     __end_ofPL10:	
  2917  02FC                     PL14:	
  2918  02FC  082F               	movf	___fttol@f1,w
  2919  02FD  00B3               	movwf	??___fttol
  2920  02FE  0830               	movf	___fttol@f1+1,w
  2921  02FF  00B4               	movwf	??___fttol+1
  2922  0300  0831               	movf	___fttol@f1+2,w
  2923  0301  00B5               	movwf	??___fttol+2
  2924  0302  0008               	return
  2925  0303                     __end_ofPL14:	
  2926                           
  2927                           	psect	intentry
  2928  0004                     __pintentry:	
  2929                           ;incstack = 0
  2930                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2931                           
  2932  0004                     interrupt_function:	
  2933  007E                     saved_w	set	btemp
  2934  0004  00FE               	movwf	btemp
  2935  0005  0E03               	swapf	3,w
  2936  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0008  00BE               	movwf	??_ISR+2
  2939  0009  0804               	movf	4,w
  2940  000A  00BF               	movwf	??_ISR+3
  2941  000B  080A               	movf	10,w
  2942  000C  00C0               	movwf	??_ISR+4
  2943  000D  087F               	movf	btemp+1,w
  2944  000E  00C1               	movwf	??_ISR+5
  2945  000F  120A  118A  282A   	ljmp	_ISR
  2946                           
  2947                           	psect	text5
  2948  0DFA                     __ptext5:	
  2949 ;; *************** function _display *****************
  2950 ;; Defined at:
  2951 ;;		line 386 in file "LedMatrix.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  StringDispla    1    wreg     PTR unsigned char 
  2954 ;;		 -> Adc_lm35String(5), 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  StringDispla    1   12[COMMON] PTR unsigned char 
  2957 ;;		 -> Adc_lm35String(5), 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 300/0
  2964 ;;		On exit  : 300/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       0       0       0       0
  2968 ;;      Locals:         1       0       0       0       0
  2969 ;;      Temps:          0       6       0       0       0
  2970 ;;      Totals:         1       6       0       0       0
  2971 ;;Total ram usage:        7 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    1
  2974 ;; This function calls:
  2975 ;;		_Ic74595_Write
  2976 ;;		___lbmod
  2977 ;;		___lwdiv
  2978 ;;		___lwmod
  2979 ;;		___wmul
  2980 ;;		_strcmp
  2981 ;;		_strlen
  2982 ;; This function is called by:
  2983 ;;		_ISR
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _display
  2989  0DFA                     _display:	
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2993                           ;display@StringDisplay stored from wreg
  2994  0DFA  00FC               	movwf	display@StringDisplay
  2995                           
  2996                           ;LedMatrix.c: 388: if (strcmp(OldString, StringDisplay))
  2997  0DFB  00F0               	movwf	strcmp@s2
  2998  0DFC  084F               	movf	_OldString,w
  2999  0DFD  277E  120A  158A   	fcall	_strcmp
  3000  0E00  0870               	movf	?_strcmp,w
  3001  0E01  0471               	iorwf	?_strcmp+1,w
  3002  0E02  1903               	btfsc	3,2
  3003  0E03  2E06               	goto	i1l1544
  3004                           
  3005                           ;LedMatrix.c: 389: {
  3006                           ;LedMatrix.c: 390: next = 0;
  3007  0E04  01CC               	clrf	_next
  3008  0E05  01CD               	clrf	_next+1
  3009  0E06                     i1l1544:	
  3010                           
  3011                           ;LedMatrix.c: 391: }
  3012                           ;LedMatrix.c: 392: OldString = StringDisplay;
  3013  0E06  087C               	movf	display@StringDisplay,w
  3014  0E07  00CF               	movwf	_OldString
  3015                           
  3016                           ;LedMatrix.c: 393: LenghString = strlen(StringDisplay)*6;
  3017  0E08  087C               	movf	display@StringDisplay,w
  3018  0E09  279C  120A  158A   	fcall	_strlen
  3019  0E0C  0871               	movf	?_strlen+1,w
  3020  0E0D  00F6               	movwf	___wmul@multiplier+1
  3021  0E0E  0870               	movf	?_strlen,w
  3022  0E0F  00F5               	movwf	___wmul@multiplier
  3023  0E10  3006               	movlw	6
  3024  0E11  00F7               	movwf	___wmul@multiplicand
  3025  0E12  01F8               	clrf	___wmul@multiplicand+1
  3026  0E13  26FB  120A  158A   	fcall	___wmul
  3027  0E16  0876               	movf	?___wmul+1,w
  3028  0E17  00CB               	movwf	_LenghString+1
  3029  0E18  0875               	movf	?___wmul,w
  3030  0E19  00CA               	movwf	_LenghString
  3031                           
  3032                           ;LedMatrix.c: 397: if (LenghString < 36)
  3033  0E1A  3000               	movlw	0
  3034  0E1B  024B               	subwf	_LenghString+1,w
  3035  0E1C  3024               	movlw	36
  3036  0E1D  1903               	skipnz
  3037  0E1E  024A               	subwf	_LenghString,w
  3038  0E1F  1803               	skipnc
  3039  0E20  2E24               	goto	i1l1552
  3040                           
  3041                           ;LedMatrix.c: 398: {
  3042                           ;LedMatrix.c: 399: next = 0;
  3043  0E21  01CC               	clrf	_next
  3044  0E22  01CD               	clrf	_next+1
  3045                           
  3046                           ;LedMatrix.c: 400: mode = 0;
  3047  0E23  01DA               	clrf	_mode
  3048  0E24                     i1l1552:	
  3049  0E24  3001               	movlw	1
  3050                           
  3051                           ;LedMatrix.c: 401: }
  3052                           ;LedMatrix.c: 402: Ic74595_Write(1, 1, 1);
  3053  0E25  01F0               	clrf	Ic74595_Write@ic
  3054  0E26  0AF0               	incf	Ic74595_Write@ic,f
  3055  0E27  01F1               	clrf	Ic74595_Write@bits
  3056  0E28  0AF1               	incf	Ic74595_Write@bits,f
  3057  0E29  26BA  120A  158A   	fcall	_Ic74595_Write
  3058                           
  3059                           ;LedMatrix.c: 403: if (mode == 0)
  3060  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0E2E  085A               	movf	_mode,w
  3063  0E2F  1D03               	btfss	3,2
  3064  0E30  2E7C               	goto	i1l1576
  3065                           
  3066                           ;LedMatrix.c: 404: {
  3067                           ;LedMatrix.c: 405: for (i = next; i < 32 + next; i++)
  3068  0E31  084C               	movf	_next,w
  3069  0E32  00D3               	movwf	_i
  3070  0E33                     i1l1574:	
  3071  0E33  27C1  120A  158A   	fcall	PL4	;call to abstracted procedure
  3072  0E36  1803               	btfsc	3,0
  3073  0E37  0008               	return
  3074                           
  3075                           ;LedMatrix.c: 406: {
  3076                           ;LedMatrix.c: 407: if (i < LenghString)
  3077  0E38  0853               	movf	_i,w
  3078  0E39  00A0               	movwf	??_display
  3079  0E3A  01A1               	clrf	??_display+1
  3080  0E3B  084B               	movf	_LenghString+1,w
  3081  0E3C  0221               	subwf	??_display+1,w
  3082  0E3D  1D03               	skipz
  3083  0E3E  2E41               	goto	u125_25
  3084  0E3F  084A               	movf	_LenghString,w
  3085  0E40  0220               	subwf	??_display,w
  3086  0E41                     u125_25:	
  3087  0E41  1803               	skipnc
  3088  0E42  2E63               	goto	i1l1566
  3089                           
  3090                           ;LedMatrix.c: 408: {
  3091                           ;LedMatrix.c: 409: SelFont = StringDisplay[(i % LenghString) / 6] - 32;
  3092  0E43  27DE  120A  158A   	fcall	PL8	;call to abstracted procedure
  3093  0E46  275A  120A  158A   	fcall	___lwmod
  3094  0E49  0871               	movf	?___lwmod+1,w
  3095  0E4A  00F8               	movwf	___lwdiv@dividend+1
  3096  0E4B  0870               	movf	?___lwmod,w
  3097  0E4C  00F7               	movwf	___lwdiv@dividend
  3098  0E4D  2730  120A  158A   	fcall	___lwdiv
  3099                           
  3100                           ;LedMatrix.c: 411: ColFont = i % 6;
  3101  0E50  27D2  120A  158A   	fcall	PL6	;call to abstracted procedure
  3102  0E53  2714  120A  158A   	fcall	___lbmod
  3103                           
  3104                           ;LedMatrix.c: 412: TempFont = font[SelFont][ColFont];
  3105  0E56  27E9  120A  158A   	fcall	PL12	;call to abstracted procedure
  3106  0E59  26FB  120A  158A   	fcall	___wmul
  3107  0E5C  27AC               	fcall	PL2	;call to abstracted procedure
  3108  0E5D  120A  118A  2400  120A  158A  	fcall	stringtab
  3109  0E62  2E64               	goto	L1
  3110  0E63                     i1l1566:	
  3111                           ;LedMatrix.c: 413: }
  3112                           
  3113                           
  3114                           ;LedMatrix.c: 414: else
  3115                           ;LedMatrix.c: 415: TempFont = 0xFF;
  3116  0E63  30FF               	movlw	255
  3117  0E64                     L1:	
  3118                           
  3119                           ;LedMatrix.c: 417: Ic74595_Write(TempFont, 2, 8);
  3120  0E64  27F3  120A  158A   	fcall	PL16	;call to abstracted procedure
  3121  0E67  26BA  120A  158A   	fcall	_Ic74595_Write
  3122                           
  3123                           ;LedMatrix.c: 418: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3124  0E6A  30C7               	movlw	199
  3125  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0E6D  00A0               	movwf	??_display
  3128  0E6E                     u179_27:	
  3129  0E6E  2E6F               	nop2
  3130  0E6F  0BA0               	decfsz	??_display,f
  3131  0E70  2E6E               	goto	u179_27
  3132  0E71  2E72               	nop2
  3133                           
  3134                           ;LedMatrix.c: 419: Ic74595_Write(0, 1, 1);
  3135  0E72  27FA  120A  158A   	fcall	PL18	;call to abstracted procedure
  3136  0E75  26BA  120A  158A   	fcall	_Ic74595_Write
  3137  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0E7A  0AD3               	incf	_i,f
  3140  0E7B  2E33               	goto	i1l1574
  3141  0E7C                     i1l1576:	
  3142                           
  3143                           ;LedMatrix.c: 422: else
  3144                           ;LedMatrix.c: 423: {
  3145                           ;LedMatrix.c: 424: for ( i = next; i < 32 + next; i++)
  3146  0E7C  084C               	movf	_next,w
  3147  0E7D  00D3               	movwf	_i
  3148  0E7E                     i1l1592:	
  3149  0E7E  27C1  120A  158A   	fcall	PL4	;call to abstracted procedure
  3150  0E81  1803               	btfsc	3,0
  3151  0E82  0008               	return
  3152                           
  3153                           ;LedMatrix.c: 425: {
  3154                           ;LedMatrix.c: 426: SelFont = StringDisplay[(i % LenghString) / 6] - 32;
  3155  0E83  27DE  120A  158A   	fcall	PL8	;call to abstracted procedure
  3156  0E86  275A  120A  158A   	fcall	___lwmod
  3157  0E89  0871               	movf	?___lwmod+1,w
  3158  0E8A  00F8               	movwf	___lwdiv@dividend+1
  3159  0E8B  0870               	movf	?___lwmod,w
  3160  0E8C  00F7               	movwf	___lwdiv@dividend
  3161  0E8D  2730  120A  158A   	fcall	___lwdiv
  3162                           
  3163                           ;LedMatrix.c: 427: ColFont = i % 6;
  3164  0E90  27D2  120A  158A   	fcall	PL6	;call to abstracted procedure
  3165  0E93  2714  120A  158A   	fcall	___lbmod
  3166                           
  3167                           ;LedMatrix.c: 428: TempFont = font[SelFont][ColFont];
  3168  0E96  27E9  120A  158A   	fcall	PL12	;call to abstracted procedure
  3169  0E99  26FB  120A  158A   	fcall	___wmul
  3170  0E9C  27AC               	fcall	PL2	;call to abstracted procedure
  3171  0E9D  120A  118A  2400  120A  158A  	fcall	stringtab
  3172                           
  3173                           ;LedMatrix.c: 430: Ic74595_Write(TempFont, 2, 8);
  3174  0EA2  27F3  120A  158A   	fcall	PL16	;call to abstracted procedure
  3175  0EA5  26BA  120A  158A   	fcall	_Ic74595_Write
  3176                           
  3177                           ;LedMatrix.c: 431: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3178  0EA8  30C7               	movlw	199
  3179  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0EAB  00A0               	movwf	??_display
  3182  0EAC                     u180_27:	
  3183  0EAC  2EAD               	nop2
  3184  0EAD  0BA0               	decfsz	??_display,f
  3185  0EAE  2EAC               	goto	u180_27
  3186  0EAF  2EB0               	nop2
  3187                           
  3188                           ;LedMatrix.c: 432: Ic74595_Write(0, 1, 1);
  3189  0EB0  27FA  120A  158A   	fcall	PL18	;call to abstracted procedure
  3190  0EB3  26BA  120A  158A   	fcall	_Ic74595_Write
  3191  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0EB8  0AD3               	incf	_i,f
  3194  0EB9  2E7E               	goto	i1l1592
  3195  0EBA                     __end_of_display:	
  3196  0EBA                     __ptext12:	
  3197 ;; *************** function _Ic74595_Write *****************
  3198 ;; Defined at:
  3199 ;;		line 355 in file "LedMatrix.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  data            1    wreg     unsigned char 
  3202 ;;  ic              1    0[COMMON] unsigned char 
  3203 ;;  bits            1    1[COMMON] unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  data            1    4[COMMON] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         2       0       0       0       0
  3216 ;;      Locals:         1       0       0       0       0
  3217 ;;      Temps:          2       0       0       0       0
  3218 ;;      Totals:         5       0       0       0       0
  3219 ;;Total ram usage:        5 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_display
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           
  3229                           ;psect for function _Ic74595_Write
  3230  0EBA                     _Ic74595_Write:	
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _Ic74595_Write: [wreg+status,2+status,0]
  3234                           ;Ic74595_Write@data stored from wreg
  3235  0EBA  00F4               	movwf	Ic74595_Write@data
  3236                           
  3237                           ;LedMatrix.c: 358: if (ic == 1)
  3238  0EBB  0B70               	decfsz	Ic74595_Write@ic,w
  3239  0EBC  2ED6               	goto	i1l1380
  3240                           
  3241                           ;LedMatrix.c: 359: {
  3242                           ;LedMatrix.c: 360: for (count = bits - 1; count >= 0; count--)
  3243  0EBD  0871               	movf	Ic74595_Write@bits,w
  3244  0EBE  3EFF               	addlw	-1
  3245  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0EC1  00D4               	movwf	_count
  3248  0EC2                     i1l1378:	
  3249  0EC2  1BD4               	btfsc	_count,7
  3250  0EC3  2ED6               	goto	i1l1380
  3251                           
  3252                           ;LedMatrix.c: 361: {
  3253                           ;LedMatrix.c: 362: if (((data >> count) & 0x01) == 0)
  3254  0EC4  0874               	movf	Ic74595_Write@data,w
  3255  0EC5  00F2               	movwf	??_Ic74595_Write
  3256  0EC6  0A54               	incf	_count,w
  3257  0EC7  2ECA               	goto	u87_24
  3258  0EC8                     u87_25:	
  3259  0EC8  1003               	clrc
  3260  0EC9  0CF2               	rrf	??_Ic74595_Write,f
  3261  0ECA                     u87_24:	
  3262  0ECA  3EFF               	addlw	-1
  3263  0ECB  1D03               	skipz
  3264  0ECC  2EC8               	goto	u87_25
  3265  0ECD  1872               	btfsc	??_Ic74595_Write,0
  3266  0ECE  2ED1               	goto	i1l203
  3267                           
  3268                           ;LedMatrix.c: 363: RD1 = 1;
  3269  0ECF  1488               	bsf	8,1	;volatile
  3270  0ED0  2ED2               	goto	i1l204
  3271  0ED1                     i1l203:	
  3272                           
  3273                           ;LedMatrix.c: 364: else
  3274                           ;LedMatrix.c: 365: RD1 = 0;
  3275  0ED1  1088               	bcf	8,1	;volatile
  3276  0ED2                     i1l204:	
  3277                           
  3278                           ;LedMatrix.c: 366: RD0 = 0;
  3279  0ED2  1008               	bcf	8,0	;volatile
  3280                           
  3281                           ;LedMatrix.c: 367: RD0 = 1;
  3282  0ED3  1408               	bsf	8,0	;volatile
  3283  0ED4  03D4               	decf	_count,f
  3284  0ED5  2EC2               	goto	i1l1378
  3285  0ED6                     i1l1380:	
  3286                           
  3287                           ;LedMatrix.c: 368: }
  3288                           ;LedMatrix.c: 369: }
  3289                           ;LedMatrix.c: 370: if (ic == 2)
  3290  0ED6  3002               	movlw	2
  3291  0ED7  0670               	xorwf	Ic74595_Write@ic,w
  3292  0ED8  1D03               	btfss	3,2
  3293  0ED9  0008               	return
  3294                           
  3295                           ;LedMatrix.c: 371: {
  3296                           ;LedMatrix.c: 372: for (count = 0; count != bits; count++)
  3297  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0EDC  01D4               	clrf	_count
  3300  0EDD                     i1l1390:	
  3301  0EDD  0854               	movf	_count,w
  3302  0EDE  00F2               	movwf	??_Ic74595_Write
  3303  0EDF  01F3               	clrf	??_Ic74595_Write+1
  3304  0EE0  1BF2               	btfsc	??_Ic74595_Write,7
  3305  0EE1  03F3               	decf	??_Ic74595_Write+1,f
  3306  0EE2  0671               	xorwf	Ic74595_Write@bits,w
  3307  0EE3  0473               	iorwf	??_Ic74595_Write+1,w
  3308  0EE4  1903               	btfsc	3,2
  3309  0EE5  2EF8               	goto	i1l211
  3310                           
  3311                           ;LedMatrix.c: 373: {
  3312                           ;LedMatrix.c: 374: if (((data >> count) & 0x01) == 0)
  3313  0EE6  0874               	movf	Ic74595_Write@data,w
  3314  0EE7  00F2               	movwf	??_Ic74595_Write
  3315  0EE8  0A54               	incf	_count,w
  3316  0EE9  2EEC               	goto	u91_24
  3317  0EEA                     u91_25:	
  3318  0EEA  1003               	clrc
  3319  0EEB  0CF2               	rrf	??_Ic74595_Write,f
  3320  0EEC                     u91_24:	
  3321  0EEC  3EFF               	addlw	-1
  3322  0EED  1D03               	skipz
  3323  0EEE  2EEA               	goto	u91_25
  3324  0EEF  1872               	btfsc	??_Ic74595_Write,0
  3325  0EF0  2EF3               	goto	i1l209
  3326                           
  3327                           ;LedMatrix.c: 375: RD4 = 1;
  3328  0EF1  1608               	bsf	8,4	;volatile
  3329  0EF2  2EF4               	goto	i1l210
  3330  0EF3                     i1l209:	
  3331                           
  3332                           ;LedMatrix.c: 376: else
  3333                           ;LedMatrix.c: 377: RD4 = 0;
  3334  0EF3  1208               	bcf	8,4	;volatile
  3335  0EF4                     i1l210:	
  3336                           
  3337                           ;LedMatrix.c: 378: RD3 = 0;
  3338  0EF4  1188               	bcf	8,3	;volatile
  3339                           
  3340                           ;LedMatrix.c: 379: RD3 = 1;
  3341  0EF5  1588               	bsf	8,3	;volatile
  3342  0EF6  0AD4               	incf	_count,f
  3343  0EF7  2EDD               	goto	i1l1390
  3344  0EF8                     i1l211:	
  3345                           
  3346                           ;LedMatrix.c: 380: }
  3347                           ;LedMatrix.c: 381: RD2 = 0;
  3348  0EF8  1108               	bcf	8,2	;volatile
  3349                           
  3350                           ;LedMatrix.c: 382: RD2 = 1;
  3351  0EF9  1508               	bsf	8,2	;volatile
  3352  0EFA  0008               	return
  3353  0EFB                     __end_of_Ic74595_Write:	
  3354  0EFB                     __ptext8:	
  3355 ;; *************** function ___wmul *****************
  3356 ;; Defined at:
  3357 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  multiplier      2    5[COMMON] unsigned int 
  3360 ;;  multiplicand    2    7[COMMON] unsigned int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  product         2    9[COMMON] unsigned int 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2    5[COMMON] unsigned int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : B00/0
  3369 ;;		On exit  : B00/0
  3370 ;;		Unchanged: B00/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         4       0       0       0       0
  3373 ;;      Locals:         2       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0
  3375 ;;      Totals:         6       0       0       0       0
  3376 ;;Total ram usage:        6 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_display
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function ___wmul
  3387  0EFB                     ___wmul:	
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3391  0EFB  01F9               	clrf	___wmul@product
  3392  0EFC  01FA               	clrf	___wmul@product+1
  3393  0EFD                     i1l1418:	
  3394  0EFD  1C75               	btfss	___wmul@multiplier,0
  3395  0EFE  2F05               	goto	i1l1422
  3396  0EFF  0877               	movf	___wmul@multiplicand,w
  3397  0F00  07F9               	addwf	___wmul@product,f
  3398  0F01  1803               	skipnc
  3399  0F02  0AFA               	incf	___wmul@product+1,f
  3400  0F03  0878               	movf	___wmul@multiplicand+1,w
  3401  0F04  07FA               	addwf	___wmul@product+1,f
  3402  0F05                     i1l1422:	
  3403  0F05  1003               	clrc
  3404  0F06  0DF7               	rlf	___wmul@multiplicand,f
  3405  0F07  0DF8               	rlf	___wmul@multiplicand+1,f
  3406  0F08  1003               	clrc
  3407  0F09  0CF6               	rrf	___wmul@multiplier+1,f
  3408  0F0A  0CF5               	rrf	___wmul@multiplier,f
  3409  0F0B  0875               	movf	___wmul@multiplier,w
  3410  0F0C  0476               	iorwf	___wmul@multiplier+1,w
  3411  0F0D  1D03               	btfss	3,2
  3412  0F0E  2EFD               	goto	i1l1418
  3413  0F0F  087A               	movf	___wmul@product+1,w
  3414  0F10  00F6               	movwf	?___wmul+1
  3415  0F11  0879               	movf	___wmul@product,w
  3416  0F12  00F5               	movwf	?___wmul
  3417  0F13  0008               	return
  3418  0F14                     __end_of___wmul:	
  3419  0F14                     __ptext11:	
  3420 ;; *************** function ___lbmod *****************
  3421 ;; Defined at:
  3422 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbmod.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  dividend        1    wreg     unsigned char 
  3425 ;;  divisor         1    0[COMMON] unsigned char 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  dividend        1    2[COMMON] unsigned char 
  3428 ;;  rem             1    4[COMMON] unsigned char 
  3429 ;;  counter         1    3[COMMON] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      unsigned char 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : B00/0
  3436 ;;		On exit  : B00/0
  3437 ;;		Unchanged: B00/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         1       0       0       0       0
  3440 ;;      Locals:         3       0       0       0       0
  3441 ;;      Temps:          1       0       0       0       0
  3442 ;;      Totals:         5       0       0       0       0
  3443 ;;Total ram usage:        5 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_display
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function ___lbmod
  3454  0F14                     ___lbmod:	
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3458                           ;___lbmod@dividend stored from wreg
  3459  0F14  00F2               	movwf	___lbmod@dividend
  3460  0F15  3008               	movlw	8
  3461  0F16  00F3               	movwf	___lbmod@counter
  3462  0F17  01F4               	clrf	___lbmod@rem
  3463  0F18                     i1l1460:	
  3464  0F18  0872               	movf	___lbmod@dividend,w
  3465  0F19  00F1               	movwf	??___lbmod
  3466  0F1A  3007               	movlw	7
  3467  0F1B  1003               	clrc
  3468  0F1C                     L6:	
  3469  0F1C  0CF1               	rrf	??___lbmod,f
  3470  0F1D  3EFF               	addlw	-1
  3471  0F1E  1003               	clrc
  3472  0F1F  1D03               	skipz
  3473  0F20  2F1C               	goto	L6
  3474  0F21  0D74               	rlf	___lbmod@rem,w
  3475  0F22  0471               	iorwf	??___lbmod,w
  3476  0F23  00F4               	movwf	___lbmod@rem
  3477  0F24  1003               	clrc
  3478  0F25  0DF2               	rlf	___lbmod@dividend,f
  3479  0F26  0870               	movf	___lbmod@divisor,w
  3480  0F27  0274               	subwf	___lbmod@rem,w
  3481  0F28  1C03               	skipc
  3482  0F29  2F2C               	goto	i1l1468
  3483  0F2A  0870               	movf	___lbmod@divisor,w
  3484  0F2B  02F4               	subwf	___lbmod@rem,f
  3485  0F2C                     i1l1468:	
  3486  0F2C  0BF3               	decfsz	___lbmod@counter,f
  3487  0F2D  2F18               	goto	i1l1460
  3488  0F2E  0874               	movf	___lbmod@rem,w
  3489  0F2F  0008               	return
  3490  0F30                     __end_of___lbmod:	
  3491  0F30                     __ptext10:	
  3492 ;; *************** function ___lwdiv *****************
  3493 ;; Defined at:
  3494 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  divisor         2    5[COMMON] unsigned int 
  3497 ;;  dividend        2    7[COMMON] unsigned int 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  quotient        2    9[COMMON] unsigned int 
  3500 ;;  counter         1   11[COMMON] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  2    5[COMMON] unsigned int 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 300/0
  3507 ;;		On exit  : 300/0
  3508 ;;		Unchanged: 300/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         4       0       0       0       0
  3511 ;;      Locals:         3       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0
  3513 ;;      Totals:         7       0       0       0       0
  3514 ;;Total ram usage:        7 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_display
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function ___lwdiv
  3525  0F30                     ___lwdiv:	
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3529  0F30  01F9               	clrf	___lwdiv@quotient
  3530  0F31  01FA               	clrf	___lwdiv@quotient+1
  3531  0F32  0875               	movf	___lwdiv@divisor,w
  3532  0F33  0476               	iorwf	___lwdiv@divisor+1,w
  3533  0F34  1903               	btfsc	3,2
  3534  0F35  2F55               	goto	i1l1496
  3535  0F36  01FB               	clrf	___lwdiv@counter
  3536  0F37                     L4:	
  3537  0F37  0AFB               	incf	___lwdiv@counter,f
  3538  0F38  1BF6               	btfsc	___lwdiv@divisor+1,7
  3539  0F39  2F3E               	goto	i1l1484
  3540  0F3A  1003               	clrc
  3541  0F3B  0DF5               	rlf	___lwdiv@divisor,f
  3542  0F3C  0DF6               	rlf	___lwdiv@divisor+1,f
  3543  0F3D  2F37               	goto	L4
  3544  0F3E                     i1l1484:	
  3545  0F3E  1003               	clrc
  3546  0F3F  0DF9               	rlf	___lwdiv@quotient,f
  3547  0F40  0DFA               	rlf	___lwdiv@quotient+1,f
  3548  0F41  0876               	movf	___lwdiv@divisor+1,w
  3549  0F42  0278               	subwf	___lwdiv@dividend+1,w
  3550  0F43  1D03               	skipz
  3551  0F44  2F47               	goto	u112_25
  3552  0F45  0875               	movf	___lwdiv@divisor,w
  3553  0F46  0277               	subwf	___lwdiv@dividend,w
  3554  0F47                     u112_25:	
  3555  0F47  1C03               	skipc
  3556  0F48  2F51               	goto	L5
  3557  0F49  0875               	movf	___lwdiv@divisor,w
  3558  0F4A  02F7               	subwf	___lwdiv@dividend,f
  3559  0F4B  0876               	movf	___lwdiv@divisor+1,w
  3560  0F4C  1C03               	skipc
  3561  0F4D  03F8               	decf	___lwdiv@dividend+1,f
  3562  0F4E  02F8               	subwf	___lwdiv@dividend+1,f
  3563  0F4F  1479               	bsf	___lwdiv@quotient,0
  3564  0F50  1003               	clrc
  3565  0F51                     L5:	
  3566  0F51  0CF6               	rrf	___lwdiv@divisor+1,f
  3567  0F52  0CF5               	rrf	___lwdiv@divisor,f
  3568  0F53  0BFB               	decfsz	___lwdiv@counter,f
  3569  0F54  2F3E               	goto	i1l1484
  3570  0F55                     i1l1496:	
  3571  0F55  087A               	movf	___lwdiv@quotient+1,w
  3572  0F56  00F6               	movwf	?___lwdiv+1
  3573  0F57  0879               	movf	___lwdiv@quotient,w
  3574  0F58  00F5               	movwf	?___lwdiv
  3575  0F59  0008               	return
  3576  0F5A                     __end_of___lwdiv:	
  3577  0F5A                     __ptext9:	
  3578 ;; *************** function ___lwmod *****************
  3579 ;; Defined at:
  3580 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  divisor         2    0[COMMON] unsigned int 
  3583 ;;  dividend        2    2[COMMON] unsigned int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  counter         1    4[COMMON] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    0[COMMON] unsigned int 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 300/0
  3592 ;;		On exit  : 300/0
  3593 ;;		Unchanged: 300/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         4       0       0       0       0
  3596 ;;      Locals:         1       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0
  3598 ;;      Totals:         5       0       0       0       0
  3599 ;;Total ram usage:        5 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_display
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function ___lwmod
  3610  0F5A                     ___lwmod:	
  3611                           
  3612                           ;incstack = 0
  3613                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3614  0F5A  0870               	movf	___lwmod@divisor,w
  3615  0F5B  0471               	iorwf	___lwmod@divisor+1,w
  3616  0F5C  1903               	btfsc	3,2
  3617  0F5D  2F79               	goto	i1l1516
  3618  0F5E  01F4               	clrf	___lwmod@counter
  3619  0F5F                     L2:	
  3620  0F5F  0AF4               	incf	___lwmod@counter,f
  3621  0F60  1BF1               	btfsc	___lwmod@divisor+1,7
  3622  0F61  2F66               	goto	i1l1508
  3623  0F62  1003               	clrc
  3624  0F63  0DF0               	rlf	___lwmod@divisor,f
  3625  0F64  0DF1               	rlf	___lwmod@divisor+1,f
  3626  0F65  2F5F               	goto	L2
  3627  0F66                     i1l1508:	
  3628  0F66  0871               	movf	___lwmod@divisor+1,w
  3629  0F67  0273               	subwf	___lwmod@dividend+1,w
  3630  0F68  1D03               	skipz
  3631  0F69  2F6C               	goto	u116_25
  3632  0F6A  0870               	movf	___lwmod@divisor,w
  3633  0F6B  0272               	subwf	___lwmod@dividend,w
  3634  0F6C                     u116_25:	
  3635  0F6C  1C03               	skipc
  3636  0F6D  2F75               	goto	L3
  3637  0F6E  0870               	movf	___lwmod@divisor,w
  3638  0F6F  02F2               	subwf	___lwmod@dividend,f
  3639  0F70  0871               	movf	___lwmod@divisor+1,w
  3640  0F71  1C03               	skipc
  3641  0F72  03F3               	decf	___lwmod@dividend+1,f
  3642  0F73  02F3               	subwf	___lwmod@dividend+1,f
  3643  0F74  1003               	clrc
  3644  0F75                     L3:	
  3645  0F75  0CF1               	rrf	___lwmod@divisor+1,f
  3646  0F76  0CF0               	rrf	___lwmod@divisor,f
  3647  0F77  0BF4               	decfsz	___lwmod@counter,f
  3648  0F78  2F66               	goto	i1l1508
  3649  0F79                     i1l1516:	
  3650  0F79  0873               	movf	___lwmod@dividend+1,w
  3651  0F7A  00F1               	movwf	?___lwmod+1
  3652  0F7B  0872               	movf	___lwmod@dividend,w
  3653  0F7C  00F0               	movwf	?___lwmod
  3654  0F7D  0008               	return
  3655  0F7E                     __end_of___lwmod:	
  3656  0F7E                     __ptext7:	
  3657 ;; *************** function _strcmp *****************
  3658 ;; Defined at:
  3659 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcmp.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  s1              1    wreg     PTR const unsigned char 
  3662 ;;		 -> NULL(0), Adc_lm35String(5), 
  3663 ;;  s2              1    0[COMMON] PTR const unsigned char 
  3664 ;;		 -> Adc_lm35String(5), 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  s1              1    5[COMMON] PTR const unsigned char 
  3667 ;;		 -> NULL(0), Adc_lm35String(5), 
  3668 ;;  r               1    4[COMMON] char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  2    0[COMMON] int 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 300/0
  3675 ;;		On exit  : B00/0
  3676 ;;		Unchanged: 300/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         2       0       0       0       0
  3679 ;;      Locals:         2       0       0       0       0
  3680 ;;      Temps:          2       0       0       0       0
  3681 ;;      Totals:         6       0       0       0       0
  3682 ;;Total ram usage:        6 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_display
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _strcmp
  3693  0F7E                     _strcmp:	
  3694                           
  3695                           ;incstack = 0
  3696                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  3697                           ;strcmp@s1 stored from wreg
  3698  0F7E  00F5               	movwf	strcmp@s1
  3699  0F7F  2F87               	goto	i1l1398
  3700  0F80                     i1l1400:	
  3701  0F80  0875               	movf	strcmp@s1,w
  3702  0F81  0084               	movwf	4
  3703  0F82  0800               	movf	0,w
  3704  0F83  1903               	btfsc	3,2
  3705  0F84  2F96               	goto	i1l1402
  3706  0F85  0AF5               	incf	strcmp@s1,f
  3707  0F86  0AF0               	incf	strcmp@s2,f
  3708  0F87                     i1l1398:	
  3709  0F87  0870               	movf	strcmp@s2,w
  3710  0F88  0084               	movwf	4
  3711  0F89  1383               	bcf	3,7	;select IRP bank0
  3712  0F8A  0800               	movf	0,w
  3713  0F8B  00F2               	movwf	??_strcmp
  3714  0F8C  0875               	movf	strcmp@s1,w
  3715  0F8D  0084               	movwf	4
  3716  0F8E  0800               	movf	0,w
  3717  0F8F  00F3               	movwf	??_strcmp+1
  3718  0F90  0872               	movf	??_strcmp,w
  3719  0F91  0273               	subwf	??_strcmp+1,w
  3720  0F92  00F4               	movwf	strcmp@r
  3721  0F93  0874               	movf	strcmp@r,w
  3722  0F94  1903               	btfsc	3,2
  3723  0F95  2F80               	goto	i1l1400
  3724  0F96                     i1l1402:	
  3725  0F96  0874               	movf	strcmp@r,w
  3726  0F97  00F0               	movwf	?_strcmp
  3727  0F98  01F1               	clrf	?_strcmp+1
  3728  0F99  1BF0               	btfsc	?_strcmp,7
  3729  0F9A  03F1               	decf	?_strcmp+1,f
  3730  0F9B  0008               	return
  3731  0F9C                     __end_of_strcmp:	
  3732  0F9C                     __ptext6:	
  3733 ;; *************** function _strlen *****************
  3734 ;; Defined at:
  3735 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  s               1    wreg     PTR const unsigned char 
  3738 ;;		 -> Adc_lm35String(5), 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  s               1    3[COMMON] PTR const unsigned char 
  3741 ;;		 -> Adc_lm35String(5), 
  3742 ;;  cp              1    4[COMMON] PTR const unsigned char 
  3743 ;;		 -> Adc_lm35String(5), 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  2    0[COMMON] unsigned int 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3748 ;; Tracked objects:
  3749 ;;		On entry : B00/0
  3750 ;;		On exit  : B00/0
  3751 ;;		Unchanged: 300/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         3       0       0       0       0
  3754 ;;      Locals:         2       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0
  3756 ;;      Totals:         5       0       0       0       0
  3757 ;;Total ram usage:        5 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_display
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _strlen
  3768  0F9C                     _strlen:	
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3772                           ;strlen@s stored from wreg
  3773  0F9C  00F3               	movwf	strlen@s
  3774  0F9D  00F4               	movwf	strlen@cp
  3775  0F9E                     i1l1410:	
  3776  0F9E  0874               	movf	strlen@cp,w
  3777  0F9F  0084               	movwf	4
  3778  0FA0  0800               	movf	0,w
  3779  0FA1  1903               	btfsc	3,2
  3780  0FA2  2FA5               	goto	i1l1412
  3781  0FA3  0AF4               	incf	strlen@cp,f
  3782  0FA4  2F9E               	goto	i1l1410
  3783  0FA5                     i1l1412:	
  3784  0FA5  0873               	movf	strlen@s,w
  3785  0FA6  0274               	subwf	strlen@cp,w
  3786  0FA7  00F0               	movwf	?_strlen
  3787  0FA8  01F1               	clrf	?_strlen+1
  3788  0FA9  1BF0               	btfsc	?_strlen,7
  3789  0FAA  03F1               	decf	?_strlen+1,f
  3790  0FAB  0008               	return
  3791  0FAC                     __end_of_strlen:	
  3792  0FAC                     PL2:	
  3793  0FAC  3012               	movlw	low (_font| (0+32768))
  3794  0FAD  00A2               	movwf	??_display+2
  3795  0FAE  3084               	movlw	high (_font| (0+32768))
  3796  0FAF  00A3               	movwf	??_display+3
  3797  0FB0  0875               	movf	?___wmul,w
  3798  0FB1  0722               	addwf	??_display+2,w
  3799  0FB2  00A4               	movwf	??_display+4
  3800  0FB3  0876               	movf	?___wmul+1,w
  3801  0FB4  1803               	skipnc
  3802  0FB5  0A76               	incf	?___wmul+1,w
  3803  0FB6  0723               	addwf	??_display+3,w
  3804  0FB7  00A5               	movwf	??_display+5
  3805  0FB8  0820               	movf	??_display,w
  3806  0FB9  0724               	addwf	??_display+4,w
  3807  0FBA  0084               	movwf	4
  3808  0FBB  0821               	movf	??_display+1,w
  3809  0FBC  1803               	skipnc
  3810  0FBD  0A21               	incf	??_display+1,w
  3811  0FBE  0725               	addwf	??_display+5,w
  3812  0FBF  00FF               	movwf	127
  3813  0FC0  0008               	return
  3814  0FC1                     __end_ofPL2:	
  3815  0FC1                     PL4:	
  3816  0FC1  084C               	movf	_next,w
  3817  0FC2  3E20               	addlw	32
  3818  0FC3  00A0               	movwf	??_display
  3819  0FC4  084D               	movf	_next+1,w
  3820  0FC5  1803               	skipnc
  3821  0FC6  3E01               	addlw	1
  3822  0FC7  00A1               	movwf	??_display+1
  3823  0FC8  0853               	movf	_i,w
  3824  0FC9  00A2               	movwf	??_display+2
  3825  0FCA  01A3               	clrf	??_display+3
  3826  0FCB  0821               	movf	??_display+1,w
  3827  0FCC  0223               	subwf	??_display+3,w
  3828  0FCD  1D03               	skipz
  3829  0FCE  0008               	return
  3830  0FCF  0820               	movf	??_display,w
  3831  0FD0  0222               	subwf	??_display+2,w
  3832  0FD1  0008               	return
  3833  0FD2                     __end_ofPL4:	
  3834  0FD2                     PL6:	
  3835  0FD2  0875               	movf	?___lwdiv,w
  3836  0FD3  077C               	addwf	display@StringDisplay,w
  3837  0FD4  00A0               	movwf	??_display
  3838  0FD5  0084               	movwf	4
  3839  0FD6  1383               	bcf	3,7	;select IRP bank0
  3840  0FD7  0800               	movf	0,w
  3841  0FD8  3EE0               	addlw	224
  3842  0FD9  00D1               	movwf	_SelFont
  3843  0FDA  3006               	movlw	6
  3844  0FDB  00F0               	movwf	___lbmod@divisor
  3845  0FDC  0853               	movf	_i,w
  3846  0FDD  0008               	return
  3847  0FDE                     __end_ofPL6:	
  3848  0FDE                     PL8:	
  3849  0FDE  3006               	movlw	6
  3850  0FDF  00F5               	movwf	___lwdiv@divisor
  3851  0FE0  01F6               	clrf	___lwdiv@divisor+1
  3852  0FE1  0853               	movf	_i,w
  3853  0FE2  00F2               	movwf	___lwmod@dividend
  3854  0FE3  01F3               	clrf	___lwmod@dividend+1
  3855  0FE4  084B               	movf	_LenghString+1,w
  3856  0FE5  00F1               	movwf	___lwmod@divisor+1
  3857  0FE6  084A               	movf	_LenghString,w
  3858  0FE7  00F0               	movwf	___lwmod@divisor
  3859  0FE8  0008               	return
  3860  0FE9                     __end_ofPL8:	
  3861  0FE9                     PL12:	
  3862  0FE9  00D0               	movwf	_ColFont
  3863  0FEA  00A0               	movwf	??_display
  3864  0FEB  01A1               	clrf	??_display+1
  3865  0FEC  0851               	movf	_SelFont,w
  3866  0FED  00F5               	movwf	___wmul@multiplier
  3867  0FEE  3006               	movlw	6
  3868  0FEF  01F6               	clrf	___wmul@multiplier+1
  3869  0FF0  00F7               	movwf	___wmul@multiplicand
  3870  0FF1  01F8               	clrf	___wmul@multiplicand+1
  3871  0FF2  0008               	return
  3872  0FF3                     __end_ofPL12:	
  3873  0FF3                     PL16:	
  3874  0FF3  00D2               	movwf	_TempFont
  3875  0FF4  3002               	movlw	2
  3876  0FF5  00F0               	movwf	Ic74595_Write@ic
  3877  0FF6  3008               	movlw	8
  3878  0FF7  00F1               	movwf	Ic74595_Write@bits
  3879  0FF8  0852               	movf	_TempFont,w
  3880  0FF9  0008               	return
  3881  0FFA                     __end_ofPL16:	
  3882  0FFA                     PL18:	
  3883  0FFA  3000               	movlw	0
  3884  0FFB  01F0               	clrf	Ic74595_Write@ic
  3885  0FFC  0AF0               	incf	Ic74595_Write@ic,f
  3886  0FFD  01F1               	clrf	Ic74595_Write@bits
  3887  0FFE  0AF1               	incf	Ic74595_Write@bits,f
  3888  0FFF  0008               	return
  3889  1000                     __end_ofPL18:	


Data Sizes:
    Strings     3
    Constant    582
    Data        1
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      59
    BANK1            80      0      30
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 5
		 -> Adc_lm35String(BANK0[5]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 5
		 -> Adc_lm35String(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> Adc_lm35String(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> NULL(NULL[0]), Adc_lm35String(BANK0[5]), 

    display@StringDisplay	PTR unsigned char  size(1) Largest target is 5
		 -> Adc_lm35String(BANK0[5]), 

    OldString	PTR unsigned char  size(1) Largest target is 5
		 -> NULL(NULL[0]), Adc_lm35String(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___aldiv
    _ISR->___altoft
    _display->___lwdiv
    ___wmul->_strlen
    ___lwdiv->___lwmod
    ___fttol->___altoft
    ___ftmul->___altoft
    ___altoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _InitKeyPad
                      _InitLedMatrix
                           _InitUART
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitLedMatrix                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitKeyPad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0    8623
                                             28 BANK0      6     6      0
                            ___aldiv
                            ___almod
                           ___altoft
                            ___ftmul
                            ___fttol
                            _display
 ---------------------------------------------------------------------------------
 (3) _display                                              7     7      0    2813
                                             12 COMMON     1     1      0
                                              0 BANK0      6     6      0
                      _Ic74595_Write
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     2      3     120
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     4      2     185
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     476
                                              5 COMMON     6     2      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     415
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              5     4      1     287
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) _Ic74595_Write                                        5     3      2     772
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             13     9      4     316
                                             15 BANK0     13     9      4
                           ___altoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2448
                                              0 BANK0     15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                             6     2      4    2194
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1992
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     424
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitKeyPad
   _InitLedMatrix
   _InitUART

 _ISR (ROOT)
   ___aldiv
   ___almod
   ___altoft
     ___ftpack
   ___ftmul
     ___altoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _display
     _Ic74595_Write
     ___lbmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     ___wmul
       _strlen (ARG)
     _strcmp
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1E       7       37.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      3B       5       73.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      67      12        0.0%
ABS                  0      0      67       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Sep 27 11:38:01 2017

           ___altoft@exp 007C                        _i 0053                        pc 0002  
            __CFG_CP$OFF 0000                       PL2 0FAC                       PL4 0FC1  
                     PL6 0FD2                       PL8 0FDE            ___altoft@sign 007D  
                     fsr 0004      ___wmul@multiplicand 0077                      PL10 02F1  
                    PL12 0FE9                      PL14 02FC                      PL16 0FF3  
                    PL18 0FFA                      l136 06B6                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      _RD0 0040  
                    _RC3 003B                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _RD4 0044             __CFG_CPD$OFF 0000  
                    _ISR 002A                      _pos 004E                      fsr0 0004  
                    indf 0000            _InitLedMatrix 06EF             __CFG_FOSC$HS 0000  
          _Ic74595_Write 0EBA             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   l1930 066E                     l1940 067D                     _CHS1 00FB  
                   _CHS2 00FC                     _CHS3 00FD                     STR_1 0658  
                   u1710 06C2                     u1720 06CB                     u1730 06D4  
                   u1724 06C5                     u1734 06CE                     u1750 066B  
                   u1770 067A                     _RCIF 0065                     _TMR0 0001  
                   _TMR1 000E             __CFG_WRT$OFF 0000                     _main 065B  
                   _cout 0048                     _font 0412             ___ftpack@arg 0070  
                   _mode 005A                     _next 004C             ___ftpack@exp 0073  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0012  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000             ___ftmul@cntr 002D  
           ___ftmul@sign 002E                    ??_ISR 003C             ___fttol@exp1 003B  
           ___fttol@lval 0037          __end_of___aldiv 014F          __end_of___almod 01B8  
                  ?_main 0070            __CFG_WDTE$OFF 0000          __end_of___lbmod 0F30  
                  _ANSEL 0188          __end_of___ftmul 0254          __end_of___fttol 02F1  
        __end_of___lwdiv 0F5A                    i1l210 0EF4                    i1l211 0EF8  
                  i1l203 0ED1                    i1l204 0ED2                    i1l209 0EF3  
                  i1l148 00CF          __end_of___lwmod 0F7E                    i1l506 015F  
                  i1l606 0284                    i1l493 00EA                    i1l594 025C  
                  _VCFG1 04FD                    _RCREG 001A           ?_InitLedMatrix 0070  
                  _SPBRG 0099                    u91_24 0EEC                    u91_25 0EEA  
                  u87_24 0ECA                    u87_25 0EC8           ?_Ic74595_Write 0070  
         __CFG_FCMEN$OFF 0000          __end_of_display 0EBA                    _count 0054  
          _StringReceive 00A0            ___ftpack@sign 0074                    pclath 000A  
                  status 0003                    wtemp0 007E               _InitKeyPad 06B7  
        __initialization 0015             __end_of_main 06B7             __end_of_font 0658  
       __end_of_InitUART 06E7                   ??_main 0000            ___fttol@sign1 0036  
       __end_of___altoft 01E7                   _ADRESH 001E                   _ADRESL 009E  
       __end_of___ftpack 0296                   _ANSELH 0189                   i1l1400 0F80  
                 i1l1402 0F96                   i1l1410 0F9E                   i1l1412 0FA5  
                 i1l1422 0F05                   i1l1440 026A                   i1l1442 0274  
                 i1l1418 0EFD                   i1l1604 00F9                   i1l1436 0260  
                 i1l1380 0ED6                   i1l1460 0F18                   i1l1508 0F66  
                 i1l1516 0F79                   u112_25 0F47                   i1l1630 0146  
                 i1l1614 010D                   i1l1446 0282                   i1l1438 0265  
                 i1l1390 0EDD                   i1l1448 0279                   i1l1720 022F  
                 i1l1712 0223                   i1l1552 0E24                   i1l1544 0E06  
                 i1l1626 0138                   i1l1650 017C                   i1l1642 016C  
                 i1l1378 0EC2                   i1l1724 0238                   i1l1708 021A  
                 i1l1468 0F2C                   i1l1484 0F3E                   i1l1900 00CC  
                 i1l1662 01AF                   i1l1398 0F87                   i1l1566 0E63  
                 i1l1574 0E33                   i1l1736 02A0                   i1l1496 0F55  
                 i1l1592 0E7E                   i1l1576 0E7C                   i1l1658 01A1  
                 i1l1690 0209                   i1l1770 02E8                   i1l1754 02C4  
                 i1l1738 02A5                   i1l1676 01CA                   i1l1764 02D0  
                 i1l1678 01D5                   i1l1686 01F8                   i1l1766 02DA  
                 i1l1758 02CC                   i1l1858 0038                   i1l1886 00AF  
                 u132_25 0120                   u116_25 0F6C                   u125_25 0E41  
                 u153_25 02A9                   u170_25 00C8                   u139_25 018A  
                 u180_27 0EAC                   u179_27 0E6E                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISC0 0438                   _TRISB2 0432  
                 _TRISC1 0439                   _TRISB3 0433                   _TRISC2 043A  
                 _TRISD0 0440                   _TRISB4 0434                   _TRISC3 043B  
                 _TRISD1 0441                   _TRISB5 0435                   _TRISD2 0442  
                 _TRISB6 0436                   _TRISD3 0443                   _TRISB7 0437  
                 _TRISD4 0444                   _TRISC6 043E                   _TRISC7 043F  
         __CFG_PWRTE$OFF 0000                ??___aldiv 0078                ??___almod 0078  
                 ___wmul 0EFB                ??___lbmod 0071                ??___ftmul 0026  
              ??___fttol 0033                ??___lwdiv 0079                ??___lwmod 0074  
        ??_InitLedMatrix 0000                   _strcmp 0F7E                   _strlen 0F9C  
              ??_display 0020    ___ftmul@f3_as_product 002A          ??_Ic74595_Write 0072  
                 saved_w 007E          ___lbmod@divisor 0070  __end_of__initialization 0026  
             ___altoft@c 0078          ___lbmod@counter 0073              _LenghString 004A  
            ?_InitKeyPad 0070               ___ftmul@f1 0020               ___ftmul@f2 0023  
             ___fttol@f1 002F           __pcstackCOMMON 0070             __pidataBANK0 0000  
             __end_ofPL2 0FC1               __end_ofPL4 0FD2               __end_ofPL6 0FDE  
             __end_ofPL8 0FE9           _OPTION_REGbits 0081               __pbssBANK0 0042  
             __pbssBANK1 00A0                ?_InitUART 0070               __pmaintext 065B  
                ?___wmul 0075               __pintentry 0004                ?___altoft 0078  
              ?___ftpack 0070          Ic74595_Write@ic 0070                  ?_strcmp 0070  
                ?_strlen 0070      __size_of_InitKeyPad 0021               __stringtab 0400  
             ??_InitUART 0000                  _ColFont 0050                  _SelFont 0051  
      Ic74595_Write@data 0074        Ic74595_Write@bits 0071                  ___aldiv 00DA  
                ___almod 014F                  ___lbmod 0F14          __size_of___wmul 0019  
                ___ftmul 01E7                  ___fttol 0296                  ___lwdiv 0F30  
                ___lwmod 0F5A               ??___altoft 007C               ??___ftpack 0075  
                __ptext1 06D8                  __ptext2 06EF                  __ptext3 06B7  
                __ptext4 002A                  __ptext5 0DFA                  __ptext6 0F9C  
                __ptext7 0F7E                  __ptext8 0EFB                  __ptext9 0F5A  
                _display 0DFA          __size_of_strcmp 001E          __size_of_strlen 0010  
           __size_of_ISR 00B0                _T1CONbits 0010         ___aldiv@dividend 0074  
                clrloop0 06E8     end_of_initialization 0026                _RCSTAbits 0018  
       ___aldiv@quotient 007A             __pstringtext 0400                  strcmp@r 0074  
                strlen@s 0073         ___lbmod@dividend 0072                _TRISBbits 0086  
            ___lbmod@rem 0074                _TXSTAbits 0098             ??_InitKeyPad 0000  
            ___ftmul@exp 0029           __end_of___wmul 0F14    __end_of_InitLedMatrix 06F5  
              _CountNext 0046           __end_of_strcmp 0F9C           __end_of_strlen 0FAC  
            __end_ofPL10 02FC              __end_ofPL12 0FF3              __end_ofPL14 0303  
            __end_ofPL16 0FFA              __end_ofPL18 1000      start_initialization 0015  
  __end_of_Ic74595_Write 0EFB              __end_of_ISR 00DA       __end_of_InitKeyPad 06D8  
              _OldString 004F        __size_of_InitUART 000F                 ??___wmul 0079  
            __pdataBANK0 005A                 ??_strcmp 0072                 ??_strlen 0073  
      __size_of___altoft 002F        __size_of___ftpack 0042                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 0000     display@StringDisplay 007C  
       ___lwdiv@dividend 0077                 ?___aldiv 0070                 ?___almod 0070  
               ?___lbmod 0070                 ?___ftmul 0020                 ?___fttol 002F  
               ?___lwdiv 0075                 ?___lwmod 0070         ___almod@dividend 0074  
               ?_display 0070         ___lwdiv@quotient 0079          ___aldiv@divisor 0070  
      interrupt_function 0004          ___aldiv@counter 0078           ___wmul@product 0079  
              clear_ram0 06E7                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 0412               _ADCON1bits 009F  
      ___wmul@multiplier 0075                 _InitUART 06D8                 _TempFont 0052  
       __size_of___aldiv 0075         __size_of___almod 0069         __size_of___lbmod 001C  
               ___altoft 01B8         __size_of___ftmul 006D         __size_of___fttol 005B  
       __size_of___lwdiv 002A         __size_of___lwmod 0024                 ___ftpack 0254  
               _adc_lm35 0042       __end_of__stringtab 0412         __size_of_display 00C0  
        ___lwdiv@divisor 0075          ___lwdiv@counter 007B                 __ptext10 0F30  
               __ptext11 0F14                 __ptext12 0EBA                 __ptext13 0296  
               __ptext14 01E7                 __ptext15 01B8                 __ptext16 0254  
               __ptext17 014F                 __ptext18 00DA        __CFG_BOR4V$BOR40V 0000  
        ___almod@divisor 0070          ___almod@counter 0078            __size_of_main 005C  
             _INTCONbits 000B           _Adc_lm35String 0055                 intlevel1 0000  
       ___lwmod@dividend 0072                stringcode 040A   __size_of_InitLedMatrix 0006  
 __size_of_Ic74595_Write 0041                 strcmp@s1 0075                 strcmp@s2 0070  
        ___lwmod@divisor 0070                 strlen@cp 0074          ___lwmod@counter 0074  
               stringtab 0400             ___aldiv@sign 0079             ___almod@sign 0079  
